diff -Nur ./check_sdcard.sh ../rc.updated/check_sdcard.sh
--- ./check_sdcard.sh	1970-01-01 02:00:00.000000000 +0200
+++ ../rc.updated/check_sdcard.sh	2015-12-25 10:43:37.813177966 +0200
@@ -0,0 +1,116 @@
+#!/bin/bash
+
+if ! id | grep -q root; then
+	echo "must be run as root"
+	exit 1
+fi
+
+if [ -e /dev/mmcblk1p4 ] ; then
+	sdcard_dev="/dev/mmcblk0"
+	eMMC="/dev/mmcblk1"
+fi
+
+if [ -e /dev/mmcblk0p4 ] ; then
+	sdcard_dev="/dev/mmcblk1"
+	eMMC="/dev/mmcblk0"
+fi
+
+if [ ! -e "${eMMC}p4" ]
+then
+        echo "Proper partitionned eMMC not found!"
+	exit 1
+fi
+
+all_done () {
+	if [ -e /tmp/checked_partition/write_test.txt ]
+	then
+		rm /tmp/checked_partition/write_test.txt
+	fi
+
+	umount /tmp/checked_partition
+	if [ -e /tmp/checked_partition ]
+	then
+		rm -r /tmp/checked_partition
+		if [ $? -gt 0 ]
+		then
+			echo Cannt remove /tmp/checked_partition !
+		fi
+	fi
+}
+
+end_error () {
+	all_done
+
+	echo "Trying to format ${sdcard_dev}p2"
+	umount ${sdcard_dev}p2 || true
+	umount ${sdcard_dev}p2 || true
+	mkfs.ext4 ${sdcard_dev}p2 -L UPGRADE
+
+	if [ $? -eq 0 ]
+	then
+		echo "Partition formated successfully."
+		if [ -e /sdcard/upgrade ]
+		then
+			mount ${sdcard_dev}p2 /sdcard/upgrade -t ext4
+			if [ $? -eq 0 ]
+			then
+				echo "Partition remounted successfully to /sdcard/upgrade"
+			else
+				echo "Error remounting to /sdcard/upgrade/"
+			fi
+		fi
+
+		exit 0
+	else
+		echo "Error formating ${sdcard_dev}p2"
+	fi
+
+	exit 1
+}
+
+if [ ! -e /tmp/checked_partition ]
+then
+	mkdir -p /tmp/checked_partition
+
+	if [ $? -gt 0 ]
+	then
+		echo "Cannt create folder /tmp/checked_partition"
+		end_error
+	fi
+fi
+
+# todo check for mounting and unmound if mounted!
+mount ${sdcard_dev}p2 /tmp/checked_partition
+if [ $? -gt 0 ]
+then
+	echo "Cannt mount to /tmp/checked_partition"
+	end_error
+fi
+
+NOW=$(date +"%m-%d-%Y %H:%M:%S")
+
+echo $NOW>/tmp/checked_partition/write_test.txt
+if [ $? -gt 0 ]
+then
+	echo "Cannt write to /tmp/checked_partition"
+	end_error
+fi
+
+read_text=$(cat /tmp/checked_partition/write_test.txt)
+if [ $? -gt 0 ]
+then
+	echo "Cannt read from /tmp/checked_partition/write_test.txt"
+	end_error
+fi
+
+if [ "$NOW" = "$read_text" ]
+then
+	echo "Partition is read/write OK.. exit."
+else
+	echo "Error reading from /tmp/checked_partition/write_test.txt.. wrote text: $NOW, read text: $read_text"
+	end_error
+fi
+
+all_done
+
+exit 0
diff -Nur ./rc.local ../rc.updated/rc.local
--- ./rc.local	2015-12-25 10:43:32.529177668 +0200
+++ ../rc.updated/rc.local	2015-12-25 10:43:37.809177966 +0200
@@ -11,4 +11,139 @@
 #
 # By default this script does nothing.
 
+check_upgrade_autorun () {
+	sdcard_dev=""
+	if [ -e /dev/mmcblk0p4 ]
+	then
+        	sdcard_dev=/dev/mmcblk1
+	elif [ -e /dev/mmcblk1p4 ]
+	then
+		sdcard_dev=/dev/mmcblk0
+	else
+		echo "No SDCard found!" >> $log_file
+		return 1
+	fi
+
+	if [ -z ${sdcard_dev} ]
+	then
+		echo "No SDCard found! Cannot find ${sdcard_dev}" >> $log_file
+		return 1
+	fi
+
+	if [ -e ${sdcard_dev} ]
+	then
+		echo "SDCard block device found at $sdcard_dev" >> $log_file
+
+		sdcard=/sdcard
+		if [ ! -e ${sdcard}/factory ]
+		then
+			mkdir -p ${sdcard}/factory>/dev/null || true
+			mkdir -p ${sdcard}/upgrade>/dev/null || true
+		fi
+
+		mount ${sdcard_dev}p1 ${sdcard}/factory>/dev/null || true
+		mount ${sdcard_dev}p2 ${sdcard}/upgrade>/dev/null || true
+
+		if [ $? -gt 0 ]
+		then
+			echo "Second SDCard partition not found.. old version? ${sdcard}p2"  >> $log_file
+		fi
+
+		echo "Checking for flag file: ${sdcard}/factory/upgrade_autorun.flag"  >> $log_file
+
+		if [ -e ${sdcard}/factory/upgrade_autorun.flag ]
+		then
+        		echo "Upgrade autorun flag found up" >> $log_file
+			cd /root/chaipcr/web || : >> $log_file
+			echo "changed folder to $(pwd).. executing migrate..." >> $log_file
+			bundle exec rake db:migrate || :>> $log_file
+			echo "Execution result: $?, now executing seed_fu..." >> $log_file
+			bundle exec rake db:seed_fu || :>> $log_file
+			echo "Execution result $?, done executing scripts!" >> $log_file
+        		rm ${sdcard}/factory/upgrade_autorun.flag
+	        	echo "Upgrade autorun flag down" >> $log_file
+		else
+			echo "No autorun flag found!" >> $log_file
+		fi
+
+		return 0
+	fi
+	return 1
+}
+
+check_corruption () {
+	echo "Corruption test started!" >> $log_file
+	sh /etc/check_sdcard.sh >> $log_file || true
+	echo "Corruption test result: $?" >> $log_file
+}
+
+#check_corruption
+#exit 0
+
+network_watchdog() {
+        echo "Network watchdog: Starting"
+        while [ 1 ]
+        do
+                ip_address=$(ifconfig eth0 | grep 'inet addr:') || :
+                if [ -z "$ip_address" ]
+                then
+                        echo "Network watchdog: No network found!"
+	                sleep 5
+                        dhclient eth0 || :
+                else
+                        echo "Network watchdog.. Network found: $ip_address"
+			sleep 10
+                fi
+        done
+	echo "Network watchdog: Exit!"
+}
+
+network_watchdog &
+NOW=$(date +"%m-%d-%Y %H:%M:%s")
+log_file="/var/log/life_age.log"
+
+echo Restarting! >> $log_file
+echo $NOW >>  $log_file
+echo Mounting partitions! >> $log_file
+
+check_upgrade_autorun &
+
+if [ -e /data ]
+then
+        echo "/data folder found!"
+else
+        mkdir /data
+fi
+
+if [ -e /dev/mmcblk0p3 ]
+then
+        mount /dev/mmcblk0p3 /data
+elif [ -e /dev/mmcblk1p3 ]
+then
+        mount /dev/mmcblk1p3 /data
+else
+        echo "Unknown condition"
+fi
+
+if [ -e /perm ]
+then
+        echo "/perm folder found!"
+else
+        mkdir /perm
+fi
+
+if [ -e /dev/mmcblk0p4 ]
+then
+        mount /dev/mmcblk0p4 /perm
+elif [ -e /dev/mmcblk1p4 ]
+then
+        mount /dev/mmcblk1p4 /perm
+fi
+
+check_corruption || true
+
+check_upgrade_autorun &
+
+echo "Autorun script done!" >> $log_file
+
 exit 0
