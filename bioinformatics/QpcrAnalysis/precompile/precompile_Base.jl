function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Tuple{typeof(Base.print_matrix_repr), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.print_matrix_repr), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.resize!), Array{Tuple{Int64, Int64}, 1}, Int64})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}, getfield(Base, Symbol("##264#265")), Bool})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}, typeof(Base.print_matrix_repr), Bool})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{String, Any}, String, String, Int64})
    precompile(Tuple{typeof(Base.resize!), Array{QpcrAnalysis.AmpStepRampOutput2Bjson, 1}, Int64})
    precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}, String, String, String, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base.isempty), Array{Float64, 3}})
    precompile(Tuple{typeof(Base.print_matrix_repr), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.show_default), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Int})
    precompile(Tuple{typeof(Base.show_generator), Base.AbstractIOBuffer{Array{UInt8, 1}}, Expr, Int64})
    precompile(Tuple{typeof(Base.show_generator), Base.AbstractIOBuffer{Array{UInt8, 1}}, Expr, Int64})
    precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Tuple{QpcrAnalysis.AmpStepRampOutput2Bjson, Bool, String}, Char, Char, Char, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base.show), Base.AbstractIOBuffer{Array{UInt8, 1}}, TypeName})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, TypeName})
    precompile(Tuple{typeof(Base.show_default), Base.AbstractIOBuffer{Array{UInt8, 1}}, Int})
    precompile(Tuple{typeof(Base.fullname), Module})
    precompile(Tuple{typeof(Base.map), typeof(Base.string), Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base.show_unquoted), Base.AbstractIOBuffer{Array{UInt8, 1}}, Expr, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Set{Int64}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ReverseDiffSparse, Symbol("##9#12"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.show_unquoted), Base.AbstractIOBuffer{Array{UInt8, 1}}, Expr, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, QpcrAnalysis.AmpStepRampOutput2Bjson}, 1}, Base.Generator{Array{QpcrAnalysis.AmpStepRampProperties, 1}, getfield(QpcrAnalysis, Symbol("##1578#1580")){Int64, Array{Any, 1}, String, Array{Any, 1}, String, Array{Any, 1}, Float64, String, String, Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}, Int64, DataStructures.OrderedDict{Array{Int64, 1}, Array{Int64, 1}}, String, Int64, Array{Int64, 2}, Array{Tuple{String, Base.Colon}, 1}, Int64, Bool, DataStructures.OrderedDict{String, Any}, DataStructures.OrderedDict{String, Any}, Array{String, 1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}, String, String, String, Bool})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}, typeof(Base.print_matrix_repr), Bool})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}, getfield(Base, Symbol("##264#265")), Bool})
    precompile(Tuple{typeof(Base.fill!), Array{Int64, 2}, Int64})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, typeof(Base.print_matrix_repr), Bool})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 2, Array{Float64, 3}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Int64}, false}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, getfield(Base, Symbol("##264#265")), Bool})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Any, Void}, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Int64, Array{Array{Float64, N} where N, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Float64, 1}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.show_circular), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Int})
    precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1604#1614")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.round), Float64, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.round), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Array{Float64, 1}, Tuple{Int64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.copy!), Array{Union{Float64, Missings.Missing}, 1}, Base.Generator{DataArrays.DataArray{Float64, 1}, getfield(DataArrays, Symbol("##1#2"))}})
    precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, String, String, String, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base.flipbits!), Base.BitArray{2}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.unique), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.copy_transpose!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}, String, String, String, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base._redirect), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.Dict{Tuple{Union{Module, Void}, Union{Symbol, Void}}, IO}, Symbol})
    precompile(Tuple{typeof(Base.repremptyarray), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.:(/)), Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.LinAlg.matmul2x2!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.round), Array{Float64, 2}, Tuple{Tuple{Bool, Bool}, Tuple{}}, Tuple{Tuple{Int64, Int64}, Tuple{}}, Array{Float64, 2}, Tuple{Int64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.print_matrix_repr), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{String, 1}})
    precompile(Tuple{getfield(Base, Symbol("##with_output_color#512")), Bool, typeof(identity), typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.SubString{String}, Base.SubString{String}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 3}, Base.Slice{Base.OneTo{Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.showall), Base.AbstractIOBuffer{Array{UInt8, 1}}, Base.MethodError})
    precompile(Tuple{typeof(Base.start), Base.ValueIterator{DataStructures.OrderedDict{String, QpcrAnalysis.AmpStepRampOutput2Bjson}}})
    precompile(Tuple{getfield(Base, Symbol("##with_output_color#512")), Bool, typeof(identity), typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, String, String})
    precompile(Tuple{typeof(Base.resize!), ReverseDiffSparse.Coloring.IndexedSet, Int64})
    precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Int64, Int64}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1813#1822")), Base.BitArray{1}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{}}, Tuple{Base.BitArray{1}, Array{Any, 1}, Int64}, Type{Base.Val{3}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, typeof(identity)})
    precompile(Tuple{typeof(Base.isempty), Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{3}}})
    precompile(Tuple{typeof(Base.copy!), Array{Function, 1}, Tuple{typeof(Base.maximum), typeof(Base.minimum)}})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Char}, Int64})
    precompile(Tuple{typeof(Base.show_datatype), Base.AbstractIOBuffer{Array{UInt8, 1}}, DataType})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1602#1612"))}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.append!), Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{QpcrAnalysis.SfcFitted, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1602#1612"))}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.array_eltype_show_how), Base.SubArray{Float64, 2, Array{Float64, 3}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Int64}, false}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1602#1612"))}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1812#1821")), Base.BitArray{1}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{}}, Tuple{Base.BitArray{1}, Array{Any, 1}, Int64}, Type{Base.Val{3}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataStructures.OrderedDict{String, Float64}, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1602#1612"))}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##32#33")){Tuple{Symbol, Symbol}, Int64}, Int64})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmax), Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{String, 1}, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1602#1612"))}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1603#1613")){Float64}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 3}, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1604#1614")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.typejoin), Int, Int})
    precompile(Tuple{typeof(Base._collect), Array{QpcrAnalysis.AmpStepRampProperties, 1}, Base.Generator{Array{QpcrAnalysis.AmpStepRampProperties, 1}, getfield(QpcrAnalysis, Symbol("##1578#1580")){Int64, Array{Any, 1}, String, Array{Any, 1}, String, Array{Any, 1}, Float64, String, String, Base.Dict{Symbol, Any}, Base.Dict{Symbol, Any}, Int64, DataStructures.OrderedDict{Array{Int64, 1}, Array{Int64, 1}}, String, Int64, Array{Int64, 2}, Array{Tuple{String, Base.Colon}, 1}, Int64, Bool, DataStructures.OrderedDict{String, Any}, DataStructures.OrderedDict{String, Any}, Array{String, 1}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.array_eltype_show_how), Array{Float64, 2}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 1}, Int64, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base.isempty), Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.unsafe_copy!), Array{Float64, 2}, Int64, Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1602#1612"))}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.LinAlg.generic_vecnormInf), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.print), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, TypeName})
    precompile(Tuple{typeof(Base._collect), Array{Symbol, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1593#1594")){QpcrAnalysis.AmpStepRampOutput, Int64, Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.show_datatype), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, DataType})
    precompile(Tuple{typeof(Base.:(==)), Tuple{Float64, Float64, Float64, Float64}, Tuple{Float64, Float64, Float64, Float64}})
    precompile(Tuple{typeof(Base.print), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Module, Char, Int})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Void}, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Void}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.array_eltype_show_how), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, Float64}, 1}, Base.Generator{Base.KeyIterator{DataStructures.OrderedDict{String, Float64}}, getfield(QpcrAnalysis, Symbol("##1587#1591"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Bool, 1}, Tuple{Bool, Bool}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{String, Any}, String})
    precompile(Tuple{typeof(Base.Cartesian.lreplace!), String, Base.Cartesian.LReplace{String}})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##32#33")){Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, Int64}, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.generic_matvecmul!), Array{Any, 1}, Char, Array{Float64, 2}, Array{Any, 1}})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Array{Int64, 1}, Void}, Int64})
    precompile(Tuple{getfield(Base, Symbol("#kw##quantile!")), Array{Any, 1}, typeof(Base.quantile!), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.typed_vcat), Type{Float64}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.resize!), Array{Array{Any, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Int64}, Int64})
    precompile(Tuple{typeof(Base.LinAlg.matmul3x3!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{QpcrAnalysis.TmCheck1w, 1}, Base.IndexLinear, Array{Any, 1}})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{String, Any}, Int64})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##32#33")){Tuple{Symbol}, Int64}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1816#1825")), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Tuple{Array{Any, 1}, Array{Any, 1}}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Array{Float64, N} where N, 1}, Int64, Array{Array{Float64, 3}, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Clustering, Symbol("##5#6"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(QpcrAnalysis, Symbol("##1523#1524")){Float64, Float64, Float64, Float64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.LinAlg.form_8x8_chunk), Array{UInt64, 1}, Int64, Int64, Int64, Int64, Int64, Int64, UInt64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{3}}, Array{Float64, 3}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.BitArray{1}, Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##32#33")){Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Int64}, Int64})
    precompile(Tuple{typeof(Base.resize!), Array{DataArrays.DataArray{Any, 2}, 1}, Int64})
    precompile(Tuple{typeof(Base.repl_color), String, Symbol})
    precompile(Tuple{typeof(Base.copy!), Base.BitArray{2}, Int64, Base.BitArray{1}, Int64, Int64})
    precompile(Tuple{typeof(Base.all), typeof(Base.UTF8proc.isspace), Base.SubString{String}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, N} where N, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1604#1614")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.findmin), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1815#1824")){Array{Int64, 1}}, Array{Any, 1}})
    precompile(Tuple{typeof(Base.resize!), Array{Array{String, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1593#1594")){QpcrAnalysis.AmpStepRampOutput, Int64, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##32#33")){Tuple{Symbol, Expr}, Int64}, Int64})
    precompile(Tuple{typeof(Base.resize!), Array{Array{DataStructures.OrderedDict{String, Any}, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmax), Array{AbstractFloat, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.Math.sinpi), Float64})
    precompile(Tuple{typeof(Base.hash), Float64})
    precompile(Tuple{typeof(Base.hash), Array{Float64, 1}, UInt64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, getfield(Base, Symbol("##264#265")), Bool})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(>)), Base.BitArray{1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Array{Float64, 1}, Tuple{Int64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.LinAlg._generic_matmatmul!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmax), Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base.exp), Float64})
    precompile(Tuple{typeof(Base.hash), Array{Int64, 1}, UInt64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.LogicalIndex{Int64, Base.BitArray{1}}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base.LinAlg.BLAS.gemm!), Char, Char, Float64, Array{Float64, 2}, Array{Float64, 2}, Float64, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Union{Float64, Missings.Missing}, 1}, Base.IndexLinear, Array{Any, 1}})
    precompile(Tuple{typeof(Base.resize!), Array{DataStructures.OrderedDict{UInt8, Any}, 1}, Int64})
    precompile(Tuple{typeof(Base.resize!), Array{Base.Set{Array{AbstractFloat, 1}}, 1}, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt8, UInt8}, UInt8})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Int64, Void}, Int64})
    precompile(Tuple{typeof(Base.bessely), Int64, Float64})
    precompile(Tuple{typeof(Base._array_for), Type{Any}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(<)), Base.BitArray{1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Array{Float64, 1}, Tuple{Int64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base._collect), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1585#1589"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.show_nd), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, typeof(Base.print_matrix_repr), Bool})
    precompile(Tuple{typeof(Base.LinAlg.transposeblock!), typeof(Base.transpose), Array{Int64, 2}, Array{Int64, 2}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Float64, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1585#1589"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.find), Array{Bool, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1593#1594")){QpcrAnalysis.AmpStepRampOutput, Int64, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{QpcrAnalysis.AmpStepRampOutput2Bjson, 1}, Base.ValueIterator{DataStructures.OrderedDict{String, QpcrAnalysis.AmpStepRampOutput2Bjson}}})
    precompile(Tuple{typeof(Base.resize!), Array{Array{Int64, 2}, 1}, Int64})
    precompile(Tuple{typeof(Base.convert), Type{Int64}, Float32})
    precompile(Tuple{typeof(Base.resize!), Array{Array{Float64, 2}, 1}, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Int64, 1}, Base.Generator{Array{Array{Int64, 1}, 1}, typeof(Base.length)}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmin), Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.Sort.partition!), Array{Float64, 1}, Int64, Int64, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Array{Float64, 2}, Int64})
    precompile(Tuple{getfield(Base, Symbol("#kw##sum!")), Array{Any, 1}, typeof(Base.sum!), Array{Float64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.copy!), Base.BitArray{1}, Base.BitArray{1}})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Int64, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.eachindex), Base.IndexLinear, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.typejoin), Int, DataType})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Float64, Void}, Int64})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{AbstractFloat, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Int64, Void}, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 3}, Base.IndexLinear, Array{Any, 3}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Any, 1}, Array{Any, 1}}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(QpcrAnalysis, Symbol("##1519#1520")){Float64, Float64, Float64, Float64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Any, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, String, String, String, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Void}, Void, Base.SubString{String}, Int64})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Float64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.size), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.:(+)), Array{AbstractFloat, 1}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.resize!), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Any, 1}, Array{Any, 1}}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1682#1694")), Base.BitArray{1}, Tuple{Tuple{Bool}}, Tuple{Tuple{Int64}}, Tuple{Array{Real, 1}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.any), getfield(Base, Symbol("##136#137")){UInt8}, Tuple{UInt8, UInt8, UInt8, UInt8}})
    precompile(Tuple{typeof(Base.resize!), Array{Array{Bool, 2}, 1}, Int64})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 2}, Array{Int64, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.eachindex), Base.IndexLinear, DataArrays.DataArray{Any, 2}})
    precompile(Tuple{getfield(Base, Symbol("#kw##with_output_color")), Array{Any, 1}, typeof(Base.with_output_color), typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, String, String})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Int64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._collect), Array{Float64, 2}, Base.Generator{Array{Float64, 2}, getfield(QpcrAnalysis, Symbol("##1621#1623"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{getfield(Base, Symbol("#kw##print_with_color")), Array{Any, 1}, typeof(Base.print_with_color), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, String, String})
    precompile(Tuple{typeof(Base.vcat), Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.unsafe_write), Base.TTY, Base.RefValue{UInt8}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##17#18")){Expr}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(==)), Base.BitArray{1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Tuple{Array{Any, 1}, Int64}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.as_kwargs), Base.Dict{Symbol, Any}})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1818#1827")), Array{Any, 1}})
    precompile(Tuple{typeof(Base.full_va_len), SimpleVector})
    precompile(Tuple{typeof(Base.DataFmt.store_cell), Base.DataFmt.DLMOffsets, Int64, Int64, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base.LinAlg.generic_vecnormp), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.resize!), Array{Array{Int64, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{String, QpcrAnalysis.AmpStepRampOutput2Bjson}, 1}, Base.Pair{String, QpcrAnalysis.AmpStepRampOutput2Bjson}, Int64})
    precompile(Tuple{typeof(Base.size), DataArrays.DataArray{Float64, 3}, Int64})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Core.MethodInstance})
    precompile(Tuple{typeof(Base.LinAlg.generic_vecnormInf), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{String, Any}, Bool, String, Int64})
    precompile(Tuple{typeof(Base.typejoin), Int, DataType})
    precompile(Tuple{typeof(Base.write), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Char})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
    precompile(Tuple{typeof(Base.similar), Array{QpcrAnalysis.AmpStepRampProperties, 1}, Type{Base.Pair{String, QpcrAnalysis.AmpStepRampOutput2Bjson}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.Pair{String, Array{String, 1}}})
    precompile(Tuple{typeof(Base.unsafe_copy!), Array{Int64, 2}, Int64, Array{Int64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, Int64}, Int64})
    precompile(Tuple{typeof(Base.length), Base.ValueIterator{DataStructures.OrderedDict{String, QpcrAnalysis.AmpStepRampOutput2Bjson}}})
    precompile(Tuple{typeof(Base.full_va_len), SimpleVector})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Tuple{Int64}})
    precompile(Tuple{getfield(Base, Symbol("#kw##with_output_color")), Array{Any, 1}, typeof(Base.with_output_color), typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.SubString{String}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Bool}, Symbol})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.:(+)), Array{Float64, 1}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.sizeof), QpcrAnalysis.AmpStepRampOutput2Bjson})
    precompile(Tuple{typeof(Base.findmin), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.check_reducedims), Array{Float64, 3}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.collect_to!), Array{QpcrAnalysis.MeltCurveTF, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1741#1750")){Array{Any, 1}, Int64, DataStructures.OrderedDict{String, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.view), Array{Float64, 3}, Base.OneTo{Int64}, Base.OneTo{Int64}, Int64, Int64})
    precompile(Tuple{getfield(Base, Symbol("##quantile!#546")), Bool, typeof(identity), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.cat_t), Int64, Type{Int}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.write), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, UInt8})
    precompile(Tuple{typeof(Base.copy_to_bitarray_chunks!), Array{UInt64, 1}, Int64, Array{Bool, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Symbol, 1}, 1}, Base.Generator{Array{DataFrames.DataFrame, 1}, typeof(Base.names)}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), DataArrays.DataArray{Any, 1}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.size), DataArrays.DataArray{Any, 3}, Int64})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1817#1826")), Array{Any, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Any, 1}, 1}, Base.Generator{Array{DataStructures.OrderedDict{Any, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1765#1773"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.hash), Array{Symbol, 1}, UInt64})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{QpcrAnalysis.AmpStepRampOutput2Bjson}, Int64})
    precompile(Tuple{typeof(Base.check_reducedims), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.resize!), Array{Bool, 1}, Int64})
    precompile(Tuple{typeof(Base.size), DataFrames.SubDataFrame{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base._summary), Array{Float64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Cartesian.lreplace!), String, Base.Cartesian.LReplace{String}})
    precompile(Tuple{typeof(Base.setindex!), DataArrays.DataArray{Any, 3}, DataArrays.DataArray{Any, 1}, Int64, Int64, Base.Colon})
    precompile(Tuple{typeof(Base.:(*)), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, DataArrays.DataArray{Float64, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.max), Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Integer, 1}, Int64, Array{Bool, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Integer, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Base.BitArray{1}, Array{Any, 1}, Int64}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.scalarmax), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, DataArrays.DataArray{Any, 3}, Int64, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._summary), Array{Float64, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{AbstractFloat, 1}, Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.:(+)), Array{Float64, 2}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.mapreduce_impl), getfield(Base, Symbol("##531#532")){Float64}, typeof(Base.:(+)), Array{Float64, 1}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base._collect), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(QpcrAnalysis, Symbol("##1698#1699"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.resize!), Array{Ipopt.IpoptSolver, 1}, Int64})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{QpcrAnalysis.TargetResultEle, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.hcat), Int64, Int64})
    precompile(Tuple{typeof(Base.reducedim_initarray0), Array{Int64, 2}, Int64, Int64, Type{Int64}})
    precompile(Tuple{typeof(Base.resize!), Array{Array{Float64, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 1}, Base.IndexLinear, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.firstcaller), Array{Ptr{Void}, 1}, Tuple{Symbol}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1409#1414")){Array{Int64, 1}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.:(==)), Tuple{Int64, Int64, Int64}, Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
    precompile(Tuple{typeof(Base.resize!), Array{QpcrAnalysis.AssignGenosResult, 1}, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Union{Tuple{Integer, Integer}, Char, Integer}}, Bool, Symbol, Int64})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##85#86")){Int64}, Int64})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Int})
    precompile(Tuple{typeof(Base.:(*)), Float64, Array{Int64, 3}})
    precompile(Tuple{typeof(Base.hash), Base.StackTraces.StackFrame, UInt64})
    precompile(Tuple{typeof(Base.typed_hcat), Type{Int64}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.typed_vcat), Type{Float64}, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.resize!), Array{Union{Tuple{Integer, Integer}, Char, Integer}, 1}, Int64})
    precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(!)), Base.BitArray{1}, Tuple{Tuple{Bool}}, Tuple{Tuple{Int64}}, Base.BitArray{1}, Tuple{}, Type{Base.Val{0}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 3}, Array{Int64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.start), Base.Iterators.Take{Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}}})
    precompile(Tuple{typeof(Base.Broadcast.check_broadcast_shape), Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.find), getfield(DataArrays, Symbol("##98#99")), Tuple{DataType, DataType, DataType, DataType}})
    precompile(Tuple{typeof(Base.stride), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.unpreserve_handle), Task})
    precompile(Tuple{getfield(Base, Symbol("#kw##sum!")), Array{Any, 1}, typeof(Base.sum!), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.hcat), Array{Any, 1}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.unsafe_view), Array{Float64, 3}, Base.OneTo{Int64}, Union{Real, (AbstractArray{T, N} where N) where T}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Array{Tuple{Symbol, Symbol}, 1}}, String})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.abs2), typeof(Base.:(+)), Array{Float64, 2}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.LinAlg.transposeblock!), typeof(Base.transpose), Array{Float64, 2}, Array{Float64, 2}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.array_eltype_show_how), Array{String, 1}})
    precompile(Tuple{typeof(Base.:(*)), Base.TwicePrecision{Float64}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1810#1819")){DataStructures.OrderedDict{String, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.resize!), Array{AbstractFloat, 1}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##3#4")){Symbol}}, Int64, Int64})
    precompile(Tuple{typeof(Base.show), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Bool})
    precompile(Tuple{typeof(Base.resize!), Array{Array{AbstractFloat, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.isnan), Base.BitArray{1}, Tuple{Tuple{Bool}}, Tuple{Tuple{Int64}}, Tuple{Array{Real, 1}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Union{Tuple{Integer, Integer}, Char, Integer}}, Int64})
    precompile(Tuple{typeof(Base.DataFmt.dlm_parse), String, Char, Char, Char, Char, Bool, Bool, Bool, Int64, Bool, Base.DataFmt.DLMOffsets})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Tuple{Array{AbstractFloat, 1}, Array{Float64, 1}}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Bool}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), DataArrays.DataArray{Float64, 1}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.DataFmt._chrinstr), String, UInt8, Int64, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{QpcrAnalysis.AmpStepRampOutput2Bjson, 1}, Int64})
    precompile(Tuple{typeof(Base.check_reducedims), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.LinAlg.BLAS.syrk!), Char, Char, Float64, Array{Float64, 2}, Float64, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.:(==)), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1811#1820")){Int64, DataStructures.OrderedDict{String, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.unsafe_write), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Ptr{UInt8}, UInt64})
    precompile(Tuple{typeof(Base.checkbounds), Type{Bool}, Array{Float64, 3}, Base.OneTo{Int64}, Base.OneTo{Int64}, Int})
    precompile(Tuple{typeof(Base.find), getfield(DataArrays, Symbol("##98#99")), Tuple{DataType, DataType}})
    precompile(Tuple{typeof(Base.:(==)), Tuple{Int64, Int64}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.reshape), Array{Float64, 2}, Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 2}, Base.Slice{Base.OneTo{Int64}}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.notify), Base.Condition, Void, Bool, Bool})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Tuple{Symbol, Any}, 1}, Base.IndexLinear, Array{Array{Tuple{Symbol, Any}, 1}, 1}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Base.UnitRange{Int64}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base.isequal), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1618#1620")), Array{Int64, 2}, Tuple{Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}}, Array{Int64, 2}, Tuple{}, Type{Base.Val{0}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{getfield(Base, Symbol("#kw##warn")), Array{Any, 1}, typeof(Base.warn), Base.TTY, String})
    precompile(Tuple{typeof(Base.resize!), Array{Base.Set{Array{Float64, 1}}, 1}, Int64})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1777#1793")){Float64}, DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}, String, String, String, Bool})
    precompile(Tuple{getfield(Base, Symbol("##sprint#228")), Void, typeof(identity), Int64, typeof(identity), Base.Dict{String, Any}, Base.Dict{String, Any}})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataArrays.DataArray{Float64, 2}, 1}, Base.Generator{Array{QpcrAnalysis.MeltCurveTF, 1}, getfield(QpcrAnalysis, Symbol("##1742#1751"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##40#42")), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Tuple{Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}}, Type{Base.Val{4}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1645#1664")), Base.BitArray{2}, Tuple{Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}}, Array{Int64, 2}, Tuple{}, Type{Base.Val{0}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Real, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Base.BitArray{1}, Array{Any, 1}, Int64}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Int64, 2}, Base.IndexLinear, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.size), DataFrames.DataFrame})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Real, 1}}, Tuple{Tuple{Bool}}, Tuple{Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Array{Float64, 1}, Void}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.showall), Base.AbstractIOBuffer{Array{UInt8, 1}}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.LAPACK.gesdd!), Char, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataArrays.DataArray{Any, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1397#1400")){Float64, DataArrays.DataArray{Any, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.isequal), Array{Float64, 1}, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base._collect), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1586#1590")){Float64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 2}, Base.IndexLinear, Array{Int64, 2}})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.:(+)), Array{Float64, 3}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
    precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), Array{Any, 1}, typeof(Base.sort!), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.Mmap.settings), Int64, Bool})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.log), Array{Float64, 1}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Tuple{Int64, Array{AbstractFloat, 1}}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Void}, Void, Base.SubString{String}})
    precompile(Tuple{typeof(Base.extrema), Array{Any, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Real, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Any, Tuple{Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.convert), Type{Array{Float64, N} where N}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Int64, 1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Tuple{Array{Any, 1}, Int64}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 2}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.show_tuple_as_call), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Symbol, Type{Int}})
    precompile(Tuple{typeof(Base.typed_vcat), Type{Float64}, Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{Tuple{Int64, Int64}, Void}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(Combinatorics, Symbol("##7#8")){Combinatorics.Combinations{Array{Int64, 1}}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.StackTraces.lookup), Ptr{Void}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Any, Tuple{Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base._array_for), Type{Float32}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.resize!), Array{DataStructures.OrderedDict{Int64, Array{Float64, 1}}, 1}, Int64})
    precompile(Tuple{typeof(Base.start), Base.Iterators.Take{Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataStructures.OrderedDict{String, Any}, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1744#1753")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##5#6")){Expr}}, Int64, Int64})
    precompile(Tuple{typeof(Base.eachindex), Base.IndexLinear, Array{Any, 3}})
    precompile(Tuple{typeof(Base.Cartesian.poplinenum), Expr})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 3}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1527#1528")){Float64, Float64, Float64, Float64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.pop!), Array{Bool, 1}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), DataStructures.OrderedDict{String, Array{String, 1}}, Int64})
    precompile(Tuple{getfield(Base, Symbol("##with_output_color#512")), Bool, typeof(identity), typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}})
    precompile(Tuple{typeof(Base.print_matrix_repr), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.SubArray{Float64, 2, Array{Float64, 3}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Int64}, false}})
    precompile(Tuple{typeof(Base._include_dependency), String})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1525#1526")){Float64, Float64, Float64, Float64}}, Int64, Int64})
    precompile(Tuple{typeof(Base._array_for), Type{Array{Float64, 1}}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Base.BitArray{1}, Base.IteratorsMD.CartesianIndex{1}})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{String, Int64}, Int64})
    precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), Array{Any, 1}, typeof(Base.sort!), Array{UInt8, 1}})
    precompile(Tuple{typeof(Base.cat_indices), DataArrays.DataArray{Any, 2}, Int64})
    precompile(Tuple{typeof(Base.splice!), Array{Int64, 1}, Int64, Array{Any, 1}})
    precompile(Tuple{typeof(Base.print), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Type{Int}, String, String})
    precompile(Tuple{typeof(Base.power_by_squaring), Base.Irrational{:π}, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Any, DataType}, Int64})
    precompile(Tuple{getfield(Base, Symbol("##print_with_color#513")), Bool, typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, String, String})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.promote_shape), Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.LinAlg.generic_matvecmul!), Array{Float64, 1}, Char, Array{Float64, 2}, Array{Float64, 1}})
    precompile(Tuple{getfield(Base, Symbol("##process_backtrace#498")), Bool, typeof(identity), getfield(Base, Symbol("##494#496")), Array{Ptr{Void}, 1}, Int64})
    precompile(Tuple{getfield(Base, Symbol("#kw##sum!")), Array{Any, 1}, typeof(Base.sum!), Array{Float64, 3}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Int64, 2}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.min), Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1843#1859"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Tuple{Array{AbstractFloat, 1}, Float64}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{Base.SubString{String}, 2}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Module})
    precompile(Tuple{getfield(Base.Mmap, Symbol("#kw##mmap")), Array{Any, 1}, typeof(Base.Mmap.mmap), Base.IOStream, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64})
    precompile(Tuple{typeof(Base.getindex), Base.SubArray{Float64, 2, Array{Float64, 3}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Int64}, false}, Int64, Int64})
    precompile(Tuple{typeof(Base.cat_indices), DataArrays.DataArray{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
    precompile(Tuple{typeof(Base._array_for), Type{Array{String, 1}}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.similar), Array{Float64, 3}, Type{Float64}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##1#2")){Expr}}})
    precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
    precompile(Tuple{typeof(Base.setindex_shape_check), DataArrays.DataArray{Float64, 2}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Float64, 2}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.print), Base.TTY, String, String, String})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1743#1752")){Array{Int64, 1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.print), Base.TTY, FactCheck.Failure, Char, Char})
    precompile(Tuple{typeof(Base._array_for), Type{DataStructures.OrderedDict{String, Float64}}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Int64, Int64}, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Type{T} where T, Void}, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1602#1612"))}})
    precompile(Tuple{typeof(Base.isassigned), Base.SubArray{Float64, 2, Array{Float64, 3}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Int64}, false}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{AbstractFloat, 3}, Base.IndexLinear, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.getindex), DataArrays.DataArray{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1743#1752")){Array{Int64, 1}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.repremptyarray), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(*)), Array{Float64, 2}, Tuple{Tuple{Bool, Bool}, Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}, Array{Float64, 2}, Tuple{Base.LinAlg.RowVector{Int64, Array{Int64, 1}}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmax), Array{Int64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataType, 1}, Base.Generator{Array{Int64, 1}, getfield(Base, Symbol("##26#27")){Tuple{DataType, DataType, DataType}}}, Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Int64, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.extrema), Array{UInt8, 1}})
    precompile(Tuple{typeof(Base.next), DataFrames.GroupedDataFrame, Int64})
    precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1636#1655")){Array{Int64, 2}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Expr, Expr, Expr})
    precompile(Tuple{typeof(Base.find), getfield(DataFrames, Symbol("##24#29")), Array{Array{Symbol, 1}, 1}})
    precompile(Tuple{typeof(Base.eachindex), Base.IndexLinear, Array{AbstractFloat, 3}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{AbstractFloat, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.:(==)), Array{Any, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.log), Base.Irrational{:e}, Int64})
    precompile(Tuple{typeof(Base.Random.rand_AbstractArray_Float64!), Base.Random.MersenneTwister, Array{Float64, 2}, Int64, Type{Base.Random.CloseOpen}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(JuMP, Symbol("##117#118"))}})
    precompile(Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}})
    precompile(Tuple{getfield(Base, Symbol("##warn#524")), Array{Any, 1}, typeof(identity), String, String})
    precompile(Tuple{typeof(Base.fill!), Array{Int32, 2}, Int32})
    precompile(Tuple{typeof(Base._cat), DataArrays.DataArray{Float64, 1}, Tuple{Int64}, Tuple{Bool}, DataArrays.DataArray{Float64, 1}, Int})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_c), typeof(identity), Type{(Array{T, N} where N) where T}, Base.BitArray{1}, Array{Any, 1}, Int})
    precompile(Tuple{typeof(Base.find), getfield(DataArrays, Symbol("##100#107")), Tuple{DataType, DataType}})
    precompile(Tuple{typeof(Base.getindex), Array{Any, 1}, Base.BitArray{1}})
    precompile(Tuple{typeof(Base.ntuple), getfield(DataFrames, Symbol("##95#96")){DataFrames.DataFrame}, Int64})
    precompile(Tuple{typeof(Base.cat_indices), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##23#24"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.splice!), Array{Base.StackTraces.StackFrame, 1}, Base.UnitRange{Int64}, Array{Any, 1}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 2}, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Sort.partition!), Array{AbstractFloat, 1}, Int64, Int64, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##3#4"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, Any}, Int64})
    precompile(Tuple{typeof(Base.Grisu._show), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Float64, Int64, Int64, Bool, Bool})
    precompile(Tuple{getfield(Base, Symbol("##process_backtrace#498")), Bool, typeof(identity), (getfield(Base, Symbol("##495#497"))){Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}}, Array{Ptr{Void}, 1}, Int64})
    precompile(Tuple{typeof(Base.start), Base.KeyIterator{DataStructures.OrderedDict{String, Any}}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 3}, Int64, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1650#1669")){Array{String, 1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Float64, 1}, 2}, Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Float64, 1}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Tuple{Float64, Array{AbstractFloat, 1}}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, Type{T} where T}, Int64})
    precompile(Tuple{typeof(Base.sizehint!), Base.Dict{String, Int64}, Int64})
    precompile(Tuple{typeof(Base.Math.asech), Float64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Any}, Void, Symbol, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Int64, Array{AbstractFloat, 1}}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 2}, Base.IndexLinear, Array{Real, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{AbstractString, 1}, Type{Symbol}}, Int64, Int64})
    precompile(Tuple{typeof(Base.sort!), Array{UInt8, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.count), getfield(Base, Symbol("##138#139")), Tuple{Bool, Bool}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Function}, Expr})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Any, Void}, Tuple{Base.StackTraces.StackFrame, String, Int64}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(==)), Base.BitArray{1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Array{Int64, 1}, Tuple{Int64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 2}, Base.Generator{Array{Float64, 2}, getfield(QpcrAnalysis, Symbol("##1621#1623"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{AbstractFloat, 1}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 2}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1632#1651")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.sizeof), Base.MethodError})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Base.UnitRange{Int64}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Any, Tuple{Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{getfield(Base, Symbol("#kw##warn")), Array{Any, 1}, typeof(Base.warn), String})
    precompile(Tuple{typeof(Base._cat), Array{Float64, 1}, Tuple{Int64}, Tuple{Bool}, Float64, Int})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float32, 1}, Base.Generator{Array{Union{Float64, Missings.Missing}, 1}, Type{Float32}}, Int64, Int64})
    precompile(Tuple{typeof(Base.hash), Array{AbstractFloat, 1}, UInt64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##47#49"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.unsafe_copy!), Array{QpcrAnalysis.GroupResultEle, 1}, Int64, Array{QpcrAnalysis.GroupResultEle, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base._array_for), Type{QpcrAnalysis.SfcFitted}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.:(-)), Float64, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Int64, 1}, getfield(JuMP, Symbol("##62#65"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.sort!), Array{AbstractFloat, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.:(-)), Float64, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.as_kwargs), DataStructures.OrderedDict{Symbol, Ipopt.IpoptSolver}})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataArrays.DataArray{Any, 2}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1408#1413")){DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.size), DataFrames.DataFrame, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Real, 2}, Int64, Array{Int64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmin), Array{Int64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.:(+)), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base._array_for), Type{Symbol}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(!=)), Base.BitArray{1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Base.UnitRange{Int64}, Tuple{Int64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Any}, Symbol})
    precompile(Tuple{typeof(Base.DataFmt.val_opts), Array{Any, 1}})
    precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Int64, 1}, Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.unsafe_copy!), Array{Float64, 1}, Int64, Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.typed_vcat), Type{Any}, Array{Any, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Array{Float64, 2}, Base.LinAlg.RowVector{Int64, Array{Int64, 1}}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Printf.decode_dec), Int64})
    precompile(Tuple{typeof(Base.DataFmt.dlm_fill), DataType, Array{Array{Int64, 1}, 1}, Tuple{Int64, Int64}, Bool, String, Bool, Char})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{QpcrAnalysis.TargetResultEle, 1}, 1}, typeof(Base.length)}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{getfield(Base, Symbol("#kw##show_trace_entry")), Array{Any, 1}, typeof(Base.show_trace_entry), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame, Int64})
    precompile(Tuple{typeof(Base.push!), DataFrames.Index, Symbol})
    precompile(Tuple{typeof(Base.print), Base.TTY, FactCheck.TestSuite})
    precompile(Tuple{getfield(Base, Symbol("#kw##sort!")), Array{Any, 1}, typeof(Base.sort!), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmin), Array{AbstractFloat, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.push!), Array{FactCheck.Result, 1}, FactCheck.Failure})
    precompile(Tuple{typeof(Base.all), Base.BitArray{1}})
    precompile(Tuple{typeof(Base.next), Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 1}, 1}, Base.Generator{Array{Function, 1}, getfield(QpcrAnalysis, Symbol("##1781#1797"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{Int64, DataArrays.DataArray{Any, 2}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1409#1414")){Array{Int64, 1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base._cat), Array{AbstractFloat, 1}, Tuple{Int64}, Tuple{Bool}, Float64, Int})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{AbstractFloat, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.SparseArrays.sparse), Array{Int64, 1}, Array{Int64, 1}, Array{Float64, 1}, Int64, Int64, typeof(identity)})
    precompile(Tuple{typeof(Base.copy!), Array{Bool, 1}, Tuple{Bool, Bool, Bool}})
    precompile(Tuple{getfield(Base, Symbol("#kw##schedule")), Array{Any, 1}, typeof(Base.schedule), Task, Base.UVError})
    precompile(Tuple{typeof(Base.size), Array{Array{Float64, 1}, 2}})
    precompile(Tuple{getfield(Base, Symbol("#kw##parse")), Array{Any, 1}, typeof(Base.parse), String, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{ReverseDiffSparse.Coloring.Edge, 1}, ReverseDiffSparse.Coloring.Edge})
    precompile(Tuple{typeof(Base.isbetween), Float64, Float64, Float64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{T, 2} where T, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1627#1630"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##21#22"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.similar), Array{Float64, 1}, Type{Int}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.unsafe_copy!), Array{QpcrAnalysis.TargetResultEle, 1}, Int64, Array{QpcrAnalysis.TargetResultEle, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Symbol, 1}, Base.Generator{Tuple{Base.Pair{Symbol, Array{Int64, 1}}, Base.Pair{Symbol, Array{Int64, 1}}, Base.Pair{Symbol, Array{Real, 1}}, Base.Pair{Symbol, Array{AbstractFloat, 1}}, Base.Pair{Symbol, Array{AbstractFloat, 1}}, Base.Pair{Symbol, Array{Real, 1}}}, getfield(DataFrames, Symbol("##35#37"))}})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataArrays.DataArray{Any, 2}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1407#1412")){DataArrays.DataArray{Float64, 3}, DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmin), Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Void, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType, DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataStructures.OrderedDict{Any, Any}, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1760#1768")){DataStructures.OrderedDict{String, Array{Any, 1}}, Array{Symbol, 1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.similar), DataArrays.DataArray{Any, 3}, Type{Any}})
    precompile(Tuple{typeof(Base.sort!), Array{AbstractFloat, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1640#1659"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(!)), Base.BitArray{1}, Tuple{Tuple{Bool}}, Tuple{Tuple{Int64}}, Array{Bool, 1}, Tuple{}, Type{Base.Val{0}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1383#1390"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Int64, 2}})
    precompile(Tuple{getfield(Base, Symbol("#kw##sum!")), Array{Any, 1}, typeof(Base.sum!), typeof(identity), Array{Float64, 3}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{Int64, Array{Int64, 1}}, Int64})
    precompile(Tuple{typeof(Base.rewrap_unionall), Int, Int})
    precompile(Tuple{typeof(Base.DataFmt.readdlm), String, Char, Char})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.Sort.sort_int_range!), Array{UInt8, 1}, UInt8, UInt8})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1675#1687")){DataFrames.SubDataFrame{Array{Int64, 1}}}}, Int64, Int64})
    precompile(Tuple{getfield(Base, Symbol("##sprint#228")), Void, typeof(identity), Int64, typeof(identity), DataStructures.OrderedDict{String, Any}, DataStructures.OrderedDict{String, Any}})
    precompile(Tuple{typeof(Base.copy!), Array{Real, 1}, Int64, Array{Int64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.next), Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.BitArray{3}, Base.BitArray{3}})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Float64, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 3}, Array{Float64, 1}, Int64, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Float64, 2}, Tuple{Tuple{Bool, Bool}, Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}, Array{Float64, 2}, Tuple{Array{Float64, 2}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Any}, Array{Any, 1}, Symbol, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Any, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Main, Symbol("##5#6"))}, Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.SparseArrays.sparse), Array{Int64, 1}, Array{Int64, 1}, Array{Bool, 1}, Int64, Int64, typeof(identity)})
    precompile(Tuple{getfield(Base, Symbol("#kw##mapreduce")), Array{Any, 1}, typeof(Base.mapreduce), typeof(identity), typeof(identity), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.find), getfield(DataFrames, Symbol("##23#28")), Array{Array{Symbol, 1}, 1}})
    precompile(Tuple{typeof(Base._collect), Array{AbstractFloat, 1}, Base.Generator{Array{AbstractFloat, 1}, getfield(QpcrAnalysis, Symbol("##1677#1689"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{getfield(Base, Symbol("#kw##show")), Array{Any, 1}, typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1643#1662")){Int64}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##17#18"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.isnan), Base.BitArray{1}, Tuple{Tuple{Bool}}, Tuple{Tuple{Int64}}, Array{AbstractFloat, 1}, Tuple{}, Type{Base.Val{0}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 1}, 1}, Base.Generator{Array{QpcrAnalysis.GroupResultEle, 1}, getfield(QpcrAnalysis, Symbol("##1683#1695"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##13#14"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.BitArray{1}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Int64, 2}, Tuple{Tuple{Bool, Bool}, Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}, Array{Int64, 2}, Tuple{Array{Int64, 2}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.copy!), Array{Array{T, 2} where T, 1}, Int64, Array{Array{Float64, 2}, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Base.BitArray{1}})
    precompile(Tuple{typeof(Base.resize!), Array{Array{Symbol, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.setindex_shape_check), DataArrays.DataArray{Any, 2}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.findnext), Array{Symbol, 1}, Symbol, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1577#1579"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.print), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, DataType})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Any, Tuple{Array{Any, 1}, Array{Any, 1}}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Int64}, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.collect_to!), Array{Void, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType, DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{Int64, Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Base.UnitRange{Int64}, Int64})
    precompile(Tuple{getfield(Base, Symbol("#kw##parse")), Array{Any, 1}, typeof(Base.parse), Base.SubString{String}, Int64})
    precompile(Tuple{typeof(Base.covm), Array{Float64, 1}, Float64, Array{AbstractFloat, 1}, Float64, Bool})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{QpcrAnalysis.TargetResultEle, 1}, 1}, Base.Generator{Array{DataFrames.DataFrame, 1}, getfield(DataFrames, Symbol("##25#30"))}, Int64, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Any}, Int64, Symbol, Int64})
    precompile(Tuple{typeof(Base.sizehint!), Base.Dict{Symbol, Void}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1649#1668")){Int64, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, Array{Int64, 2}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1832#1848")){DataStructures.OrderedDict{String, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Int64, Void}, Int64})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.scalarmin), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.:(+)), Array{Float64, 3}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmin), Base.IndexLinear, Array{Float64, 2}})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.:(+)), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Symbol, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{getfield(Base, Symbol("##sprint#228")), Void, typeof(identity), Int64, typeof(identity), Bool, Bool})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float32, 1}, Base.Generator{Array{Float64, 1}, Type{Float32}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{Int64, 1}, 1}, typeof(Base.length)}, Int64, Int64})
    precompile(Tuple{typeof(Base.cat_t), Int64, Type{Int}, DataArrays.DataArray{Float64, 2}, DataArrays.DataArray{Float64, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##5#6")){Expr}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 2}, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1633#1652")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1640#1659"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Float64, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1382#1389"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.unique), Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 2}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1408#1413")){DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 2}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1627#1630"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{QpcrAnalysis.GroupResultEle, 1}, 1}, typeof(Base.length)}, Int64, Int64})
    precompile(Tuple{typeof(Base.LinAlg.BLAS.gemv!), Char, Float64, Array{Float64, 2}, Array{Float64, 1}, Float64, Array{Float64, 1}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1649#1668")){Int64, Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1383#1390"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.:(-)), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.resize!), Array{Tuple{String, Int64}, 1}, Int64})
    precompile(Tuple{typeof(Base.find), getfield(JuMP, Symbol("##60#63")), Array{DataType, 1}})
    precompile(Tuple{getfield(Base, Symbol("##with_output_color#512")), Bool, typeof(identity), typeof(identity), Symbol, Base.TTY, String, String})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, UInt64})
    precompile(Tuple{typeof(Base.copy!), Array{Int64, 1}, Int64, Array{Int64, 1}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1676#1688"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Any, 1}, getfield(QpcrAnalysis, Symbol("##1759#1767")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.cat_t), Int64, Type{Int}, DataArrays.DataArray{Any, 2}, DataArrays.DataArray{Any, 2}})
    precompile(Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Int64, Array{Void, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1408#1413")){DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Float64, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.scalarmax), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##3#4")){Expr}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##1#2")){Expr}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Int64, Array{Array{Float64, 2}, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.LinAlg.lapack_size), Char, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.cat), Int64, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.copy), DataFrames.DataFrame})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Array{Tuple{Symbol, Any}, 1}, getfield(JuMP, Symbol("##134#135"))}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmin), Array{Int64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, Array{Float64, 2}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1409#1414")){Array{String, 1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1406#1411"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataFrames.DataFrame, 1}, Base.Generator{DataFrames.GroupedDataFrame, getfield(DataFrames, Symbol("##62#63")){getfield(QpcrAnalysis, Symbol("##1678#1690")){Int64, QpcrAnalysis.GroupResultEle}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Array{Float64, 1}, Void}, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.show_vector), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, String, String})
    precompile(Tuple{typeof(Base.indexed_next), Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{getfield(Base, Symbol("##print_with_color#513")), Bool, typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.SubString{String}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Any, 1}, 1}, Base.Generator{Array{DataStructures.OrderedDict{Any, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1766#1774"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64, Int64}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##102#109")){Tuple{DataType, DataType}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.hcat), Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 1}, 1}, Base.Generator{Array{DataFrames.DataFrame, 1}, getfield(DataFrames, Symbol("##25#30"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.:(+)), Array{Int64, 2}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{AbstractString, 2}, Base.IndexLinear, Array{Base.SubString{String}, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, Array{Int64, 2}}, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1384#1391")){DataStructures.OrderedDict{String, Any}, Array{String, 1}, Array{Int64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Int64, 1}, Float64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.median), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Real, 1}}, Tuple{Tuple{Bool}}, Tuple{Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{Int64, Void}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##5#6"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.Math.deg2rad_ext), Float64})
    precompile(Tuple{typeof(Base.find), getfield(DataArrays, Symbol("##100#107")), Tuple{DataType, DataType, DataType, DataType}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Void, 1}, Base.Generator{Array{FactCheck.Error, 1}, typeof(Base.println)}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{Int64, 2}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.erfinv), Float64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{QpcrAnalysis.UniqCombinCenters, 1}, getfield(QpcrAnalysis, Symbol("##1641#1660"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.checkbounds_indices), Type{Bool}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Int64}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1626#1629"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{QpcrAnalysis.GroupResultEle, 1}, 1}, Base.Generator{Array{DataFrames.DataFrame, 1}, getfield(DataFrames, Symbol("##25#30"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Bool, 1}})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1385#1392")), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._bcs1), Base.OneTo{Int64}, Base.OneTo{Int64}})
    precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1637#1656")){Array{Int64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.convert), Type{Array{QpcrAnalysis.AbstractAmpFitted, 2}}, Array{QpcrAnalysis.SfcFitted, 2}})
    precompile(Tuple{typeof(Base.start), Base.KeyIterator{DataStructures.OrderedDict{String, Float64}}})
    precompile(Tuple{typeof(Base._collect), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(QpcrAnalysis, Symbol("##1759#1767")){Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{DataStructures.OrderedDict{Any, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1762#1770")){Array{Symbol, 1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base._summary), Array{Float64, 3}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Real, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Int64, Array{AbstractFloat, 1}}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{Float64, 2}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{AbstractFloat, 1}, getfield(QpcrAnalysis, Symbol("##1677#1689"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float32, 1}, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1387#1394")){DataType, DataStructures.OrderedDict{String, Array{Int64, 2}}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 2}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1407#1412")){Array{Any, 3}, DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1626#1629"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.Sort.select!), Array{Float64, 1}, Base.UnitRange{Int64}, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{AbstractFloat, 1}, Array{Float64, 1}}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmax), Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Int64, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.toq)})
    precompile(Tuple{typeof(Base.isempty), Base.BitArray{3}})
    precompile(Tuple{typeof(Base.unique_from), Array{Any, 1}, Array{Int64, 1}, Base.Set{Int64}, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 2}, Base.IndexLinear, Array{Float32, 2}})
    precompile(Tuple{typeof(Base.:(<=)), Float64, Int64})
    precompile(Tuple{typeof(Base.:(-)), Array{AbstractFloat, 1}, Float64})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##109#111")), Int64})
    precompile(Tuple{typeof(Base.finalizer), Int, Int})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Array{Float64, 2}, getfield(QpcrAnalysis, Symbol("##1622#1624")){Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##31#33"))}, Int64, Int64})
    precompile(Tuple{typeof(Base._array_for), Type{Base.Pair{String, Float64}}, Base.KeyIterator{DataStructures.OrderedDict{String, Float64}}, Base.HasLength})
    precompile(Tuple{typeof(Base.getindex), DataFrames.Index, Symbol})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 2}, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1642#1661"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.count), getfield(Base, Symbol("##138#139")), Array{Bool, 1}})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.abs2), typeof(Base.:(+)), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Array{Tuple{Int64, Int64}, 1}, 1}, typeof(Base.length)}, Int64, Int64})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{Array{Float64, 1}, Void}, Int64})
    precompile(Tuple{typeof(Base.array_eltype_show_how), Array{Float64, 3}})
    precompile(Tuple{typeof(Base.erfcinv), Float64})
    precompile(Tuple{typeof(Base.isequal), Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.Math.asec), Float64})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Float64, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.showall), Base.AbstractIOBuffer{Array{UInt8, 1}}, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.zero), Type{JuMP.GenericQuadExpr{Float64, JuMP.Variable}}})
    precompile(Tuple{typeof(Base.show_backtrace), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Ptr{Void}, 1}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Void}, Void, Tuple{Base.StackTraces.StackFrame, String, Int64}, Int64})
    precompile(Tuple{typeof(Base.LinAlg.checksquare), Array{Float32, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float32, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Float32, Tuple{Array{Float32, 1}, Array{Float32, 1}}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.similar), Array{Symbol, 1}, Type{Array{Float64, 3}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._mapreducedim!), typeof(Base.identity), typeof(Base.scalarmin), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.repremptyarray), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.push!), ReverseDiffSparse.Coloring.IndexedSet, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1586#1590")){Float64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.hvcat_fill), Array{Float64, 2}, Tuple{Int64, Float64}})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Int64, Array{Int64, 1}}, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Any, 1}, Array{Any, 1}}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Bool})
    precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1642#1661"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Tuple{QpcrAnalysis.AmpStepRampOutput2Bjson, Bool, String}})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1402#1403")), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.:(==)), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool}, Tuple{Int64, Int64}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.quantile), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.union!), Base.Set{Int64}, Int64})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Tuple{Int64, Int64}, Void}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1397#1400")){Float64, Array{Int64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Any, 1}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_c), typeof(identity), Type{(Array{T, N} where N) where T}, Float64, Array{Float64, 1}, Int})
    precompile(Tuple{typeof(Base.convert), Type{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Float64, 1}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 2}, Array{Int64, 1}, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.LinAlg.generic_scale!), Array{Float64, 3}, Float64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1676#1688"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Int64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(ReverseDiffSparse, Symbol("##11#14"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex_shape_check), DataArrays.DataArray{Any, 1}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{QpcrAnalysis.SfcFitted, 2}, QpcrAnalysis.SfcFitted, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Any, 1}, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1396#1399")){DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}, Array{Int64, 1}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Real, 1}})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##46#47")){Array{Int64, 1}}}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(*)), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Array{Float64, 1}, Tuple{Array{Float64, 1}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.similar), Array{DataStructures.OrderedDict{Any, Any}, 1}, Type{Array{Any, 1}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Printf.ini_dec), Float64, Int64})
    precompile(Tuple{typeof(Base.similar), Array{Any, 3}, Type{Any}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Any}, JuMP.Variable, Symbol, Int64})
    precompile(Tuple{typeof(Base.Distributed.nprocs)})
    precompile(Tuple{typeof(Base.vcat), Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Bool}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.hcat), Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##3#4")){Expr}}})
    precompile(Tuple{typeof(Base.getindex), Array{Symbol, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.print_with_color), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.SubString{String}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.isequal), Array{AbstractFloat, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Main, Symbol("##5#6"))}})
    precompile(Tuple{typeof(Base._collect), Array{Symbol, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1673#1685")){DataFrames.DataFrame}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.LinAlg.generic_scale!), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Base.StackTraces.StackFrame, 1}, 1}, Base.Generator{Array{Ptr{Void}, 1}, typeof(Base.StackTraces.lookup)}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##44#45")){Array{Int64, 1}}}})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Float64, N} where N, 1}, Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Float64, Array{Int64, 1}, Int64, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataArrays.DataArray{Float64, 1}, Float64, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataStructures.OrderedDict{String, Any}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1829#1830")){DataStructures.OrderedDict{String, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float32, 1}, Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Any, 1}, Array{Float64, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Any, 1}, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1833#1849")){Int64, DataStructures.OrderedDict{String, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{DataFrames.DataFrame, 1}, getfield(DataFrames, Symbol("##25#30"))}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.Math.gamma), Float64})
    precompile(Tuple{typeof(Base.unsafe_copy!), Array{AbstractString, 1}, Int64, Array{AbstractString, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1405#1410"))}, Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Base.BitArray{1}, Bool, Base.Slice{Base.OneTo{Int64}}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1625#1628")){Int64, Array{Float64, 2}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.Math.cospi), Float64})
    precompile(Tuple{typeof(Base.bessely), Float64, Base.Complex{Float64}})
    precompile(Tuple{getfield(Base, Symbol("##parse#234")), Bool, Bool, typeof(identity), String, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{DataType, 1}, Tuple{DataType, DataType, DataType}})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Array{AbstractFloat, 1}, Void}, Int64})
    precompile(Tuple{typeof(Base.reshape), Array{Float64, 2}, Int64, Int64, Int64})
    precompile(Tuple{getfield(Base, Symbol("##252#253")), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}})
    precompile(Tuple{typeof(Base.unique), Array{Any, 1}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 1}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), DataArrays.DataArray{Float64, 1}, DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base._array_for), Type{QpcrAnalysis.MbqOutput}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.convert), Type{DataStructures.OrderedDict{Int64, Array{Float64, 1}}}, DataStructures.OrderedDict{UInt8, Any}})
    precompile(Tuple{typeof(Base.any), typeof(Base.isnan), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.BitArray{3}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.similar), Array{Symbol, 1}, Type{Symbol}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Any, 1}, Base.IndexLinear, Array{Array{Any, 1}, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 2}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1627#1630"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1673#1685")){DataFrames.DataFrame}}, Int64, Int64})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{Array{AbstractFloat, 1}, Void}, Int64})
    precompile(Tuple{typeof(Base.repr), Base.MethodError})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Tuple{Base.Pair{Symbol, Array{Int64, 1}}, Base.Pair{Symbol, Array{Int64, 1}}, Base.Pair{Symbol, Array{Real, 1}}, Base.Pair{Symbol, Array{AbstractFloat, 1}}, Base.Pair{Symbol, Array{AbstractFloat, 1}}, Base.Pair{Symbol, Array{Real, 1}}}, getfield(DataFrames, Symbol("##36#38"))}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##5#6")){Expr}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Void, 1}, Base.Generator{Array{FactCheck.Failure, 1}, typeof(Base.println)}, Int64, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1409#1414")){Array{String, 1}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.MPFR.setprecision), Type{Base.MPFR.BigFloat}, Int64})
    precompile(Tuple{typeof(Base.LinAlg.copytri!), Array{Float64, 2}, Char, Bool})
    precompile(Tuple{typeof(Base.print), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Module})
    precompile(Tuple{getfield(Base.Sort, Symbol("##sort!#7")), Base.Sort.QuickSortAlg, typeof(identity), typeof(identity), Bool, Base.Order.ForwardOrdering, typeof(identity), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Int64, Symbol}, Int64})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1745#1754")), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{Float64, 1}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.reducedim_initarray), Array{Int64, 2}, Int64, Int64, Type{Int64}})
    precompile(Tuple{typeof(Base.checkbounds), Array{Float64, 3}, Base.OneTo{Int64}, Base.OneTo{Int64}, Int64, Int64})
    precompile(Tuple{typeof(Base.warn), Base.TTY, String})
    precompile(Tuple{typeof(Base.zeta), Float64, Float64})
    precompile(Tuple{typeof(Base.isequal), Array{Symbol, 1}, Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##77#79")), typeof(Base.:(+)), Int64, Tuple{Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{Float64, 1}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Int64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Array{Int64, 1}, Tuple{Array{Int64, 1}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.hash), Tuple{Int64, Int64}, UInt64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Any, 1}, Int64}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Float64, 3}, 1}, Array{Float64, 3}, Int64})
    precompile(Tuple{typeof(Base.unique), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Float64, Array{Float64, 1}, Int64, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{String, 2}, String, Int64, Int64})
    precompile(Tuple{typeof(Base.print), JSON.Writer.StringContext{JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}}, Symbol})
    precompile(Tuple{typeof(Base.all), getfield(ReverseDiffSparse, Symbol("##5#6")){Array{ReverseDiffSparse.Linearity, 1}, Array{Int64, 1}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1782#1798"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.zeta), Float64})
    precompile(Tuple{typeof(Base.setindex!), Array{DataStructures.OrderedDict{String, Float64}, 2}, DataStructures.OrderedDict{String, Float64}, Int64})
    precompile(Tuple{typeof(Base.empty!), ReverseDiffSparse.Coloring.IndexedSet})
    precompile(Tuple{typeof(Base.start), Base.ValueIterator{DataStructures.OrderedDict{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 1}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Int64, Int64}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Tuple{Int64, Int64}, Void}, Void, Tuple{Int64, Int64}, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 3}, Base.IndexLinear, Array{AbstractFloat, 3}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Float64, Void}, Float64})
    precompile(Tuple{typeof(Base.LinAlg.generic_scale!), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Float64})
    precompile(Tuple{typeof(Base.hcat), Float64, Float64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Base.LinAlg.RowVector{Any, Array{Any, 1}}, Base.IteratorsMD.CartesianIndex{2}})
    precompile(Tuple{typeof(Base.:(==)), Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.DataFmt.result), Base.DataFmt.DLMOffsets})
    precompile(Tuple{getfield(Base, Symbol("##parse#234")), Bool, Bool, typeof(identity), Base.SubString{String}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{QpcrAnalysis.MbqOutput, 2}, Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1601#1611")){Int64, String, String, Base.Dict{Symbol, Any}, String, Bool, Array{AbstractFloat, 3}}}, Int64, Tuple{Int64, Int64, Base.Nullable{Int64}, Bool}})
    precompile(Tuple{typeof(Base.convert), Type{Array{DataStructures.OrderedDict{String, Float64}, 2}}, Array{DataStructures.OrderedDict{String, Float64}, 2}})
    precompile(Tuple{getfield(Base.Mmap, Symbol("##3#5")), Array{UInt8, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Any, 1}, getfield(QpcrAnalysis, Symbol("##1698#1699"))}, Int64, Int64})
    precompile(Tuple{getfield(Base, Symbol("##showarray#263")), Bool, typeof(identity), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}, Bool})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Float64, 3}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.stride), Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Char}, Symbol})
    precompile(Tuple{typeof(Base._array_for), Type{Int64}, Array{Any, 1}, Base.HasShape})
    precompile(Tuple{typeof(Base.DataFmt.result), Base.DataFmt.DLMStore{Any}})
    precompile(Tuple{typeof(Base.ensure_indexable), Tuple{Base.OneTo{Int64}, Int64}})
    precompile(Tuple{typeof(Base.LinAlg.generic_scale!), Array{Float64, 2}, Float64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 3}, Base.IndexLinear, Array{Int64, 3}})
    precompile(Tuple{typeof(Base.union!), Base.Set{Int64}, Int64})
    precompile(Tuple{typeof(Base.show), Base.TTY, FactCheck.Failure})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Tuple{Int64, Bool}}, Int64, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Array{Symbol, 1}, Void}, Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.Math.cosd), Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{AbstractFloat, 1}, Tuple{Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.Sort.partition!), Array{UInt8, 1}, Int64, Int64, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.convert), Type{Array{Float64, 3}}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.start), Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.union!), ReverseDiffSparse.Coloring.IndexedSet, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.next), Combinatorics.Combinations{Array{Int64, 1}}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{AbstractFloat, 3}, Base.Colon, Int64, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.Colon, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, QpcrAnalysis.AmpStepRampOutput2Bjson}, QpcrAnalysis.AmpStepRampOutput2Bjson, String})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Float64, Array{AbstractFloat, 1}}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{Float64, 1}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1397#1400")){Float64, Array{Float64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Array{Float64, 1}, Base.IteratorsMD.CartesianIndex{1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1603#1613")){Float64}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_c), typeof(identity), Type{(Array{T, N} where N) where T}, Float64, Array{Int64, 1}, Int})
    precompile(Tuple{typeof(Base.digamma), Float64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##31#33"))}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{AbstractFloat, 1}, Float64}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Int64, Array{Int64, 1}}, Array{Int64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.showall), Base.AbstractIOBuffer{Array{UInt8, 1}}, Base.KeyError})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, DataType}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.cat_indices), Array{Int64, 2}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Bool}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.BitArray{1}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1398#1401")), Array{Float64, 1}, Tuple{Tuple{}, Tuple{Bool}, Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}, Tuple{}, Tuple{Int64}}, Float64, Tuple{Array{Int64, 1}, Int64, Array{Float64, 1}}, Type{Base.Val{3}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.throw_checksize_error), DataArrays.DataArray{Float64, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.append_any), Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##40#41"))}, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##40#41"))}})
    precompile(Tuple{typeof(Base.copy!), Array{Float64, 1}, Int64, Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{String, Float64}, 1}, Base.Pair{String, Float64}, Int64})
    precompile(Tuple{typeof(Base.isequal), Array{AbstractFloat, 1}, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Real, 1}, Float64, Int64})
    precompile(Tuple{typeof(Base.cat_t), Int64, Type{Int}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.LinAlg.normInf), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.LinAlg.put_8x8_chunk), Array{UInt64, 1}, Int64, Int64, UInt64, Int64, Int64, Int64, Int64, UInt64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{DataArrays.DataArray{Float64, 1}, Float64}})
    precompile(Tuple{typeof(Base.trigamma), Float64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Int64}, Symbol})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Void}, Void, Symbol, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_c), typeof(identity), Type{(Array{T, N} where N) where T}, Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}, Base.LinAlg.RowVector{Any, Array{Any, 1}}})
    precompile(Tuple{getfield(Base, Symbol("#kw##with_output_color")), Array{Any, 1}, typeof(Base.with_output_color), typeof(identity), Symbol, Base.TTY, String, String})
    precompile(Tuple{typeof(Base.cat_t), Type{Int}, Type{Int}, Float64, Int})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Array{Int64, 1}, Void}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{String, 1}, 2}, Array{String, 1}, Int64})
    precompile(Tuple{typeof(Base.append_any), Float64, Int})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Array{Int64, 1}, Void}, Void, Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.show_vector), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 3}, String, String})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Float64, 1}, Base.IndexLinear, Array{Any, 1}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Int64}, Int64, Symbol, Int64})
    precompile(Tuple{typeof(Base.haskey), Base.Dict{Any, Any}, Symbol})
    precompile(Tuple{getfield(Base.DataFmt, Symbol("#kw##readdlm_auto")), Array{Any, 1}, typeof(Base.DataFmt.readdlm_auto), String, Char, Type{Int}, Char, Bool})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataFrames.DataFrame, 1}, Base.Generator{DataFrames.GroupedDataFrame, getfield(DataFrames, Symbol("##62#63")){getfield(QpcrAnalysis, Symbol("##1674#1686")){Int64, Int64, QpcrAnalysis.TargetResultEle}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.sizehint!), DataStructures.OrderedDict{Symbol, Any}, Int64})
    precompile(Tuple{typeof(Base.all), getfield(Base, Symbol("##179#181")), Base.Iterators.Zip2{Array{Int64, 1}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType, DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Symbol, 2}, Symbol, Int64})
    precompile(Tuple{typeof(Base.LinAlg.dot), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base._collect), Array{Symbol, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1642#1661"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Int64}, String})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}}, Tuple{Tuple{Bool, Bool}, Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}, Base.IteratorsMD.CartesianIndex{2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Array{Float64, 1}, Tuple{Array{Float64, 1}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.LinAlg.istril), Array{Float32, 2}})
    precompile(Tuple{typeof(Base.unsafe_copy!), Array{AbstractFloat, 1}, Int64, Array{AbstractFloat, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(/)), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Array{Int64, 1}, Tuple{Float64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{getfield(Base, Symbol("#kw##print_with_color")), Array{Any, 1}, typeof(Base.print_with_color), Symbol, Base.TTY, String, String})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_c), typeof(identity), Type{(Array{T, N} where N) where T}, Array{Int64, 2}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##1398#1401")), Array{Float64, 1}, Tuple{Tuple{}, Tuple{Bool}, Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}, Tuple{}, Tuple{Int64}}, Float64, Tuple{Array{Float64, 1}, Int64, Array{Float64, 1}}, Type{Base.Val{3}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.index_ndims), Base.OneTo{Int64}, Base.OneTo{Int64}, Int})
    precompile(Tuple{typeof(Base.size), DataArrays.DataArray{Any, 1}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Float64, 1}, Tuple{Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.setindex!), Base.BitArray{1}, Bool, Base.IteratorsMD.CartesianIndex{1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}, 1}, Base.Pair{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}, Int64})
    precompile(Tuple{typeof(Base.index_dimsum), Base.OneTo{Int64}, Base.OneTo{Int64}, Int})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Any}, Type{Int}})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{AbstractFloat, 1}, Float64})
    precompile(Tuple{typeof(Base._array_for), Type{Array{Any, 1}}, Base.UnitRange{Int64}, Base.HasShape})
    precompile(Tuple{typeof(Base.fill!), Array{String, 1}, String})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Float64, Void}, Void, Float64, Int64})
    precompile(Tuple{typeof(Base.vcat), Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.gcd), Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Base.BitArray{1}, Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.LinAlg.LAPACK.chklapackerror), Int64})
    precompile(Tuple{typeof(Base.deleteat!), Array{Array{Symbol, 1}, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 3}, Base.Colon, Base.Colon, Int64})
    precompile(Tuple{typeof(Base.cat_t), Type{Int}, Type{Int}, DataArrays.DataArray{Float64, 1}, Int})
    precompile(Tuple{typeof(Base.show), Base.AbstractIOBuffer{Array{UInt8, 1}}, DataType})
    precompile(Tuple{getfield(Base, Symbol("##quantile#547")), Bool, typeof(identity), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.KeyIterator{DataStructures.OrderedDict{String, Float64}}, getfield(QpcrAnalysis, Symbol("##1587#1591"))}})
    precompile(Tuple{typeof(Base.LinAlg.generic_vecnorm2), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##102#109")){Tuple{DataType, DataType, DataType, DataType}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.dims2string), Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Array{Symbol, 1}, Void}, Int64})
    precompile(Tuple{getfield(Base, Symbol("##warn#523")), String, Bool, Tuple{Base.StackTraces.StackFrame, String, Int64}, Array{Ptr{Void}, 1}, String, Int64, typeof(identity), Base.TTY, String, String})
    precompile(Tuple{typeof(Base.getindex), Array{QpcrAnalysis.MbqOutput, 2}, Int64, Int64})
    precompile(Tuple{getfield(Base.StackTraces, Symbol("##show#9")), Bool, typeof(identity), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Float64, 3}, Int64})
    precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Int64, 1}, getfield(DataArrays, Symbol("##103#110"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##105#112")){Tuple{DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.minimum), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{AbstractFloat, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.getindex), Array{Array{Float64, 1}, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Array{Float64, 1}, Void}, Void, Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Any, Void}, Base.SubString{String}})
    precompile(Tuple{typeof(Base.LinAlg.generic_vecnorm1), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Array{QpcrAnalysis.MeltCurveTa, 1}, 1}, Base.Generator{Array{Array{DataStructures.OrderedDict{String, Any}, 1}, 1}, getfield(QpcrAnalysis, Symbol("##1746#1755")){Bool, Float64, Float64, Bool, DataStructures.OrderedDict{Symbol, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.LinAlg.A_mul_B!), Float64, Base.SparseArrays.SparseMatrixCSC{Float64, Int64}, Array{Float64, 1}, Float64, Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), DataArrays.DataArray{Any, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.extrema), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType, DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.:(-)), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.throw_checksize_error), DataArrays.DataArray{Any, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._summary), Array{String, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Mmap.grow!), Base.IOStream, Int64, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.vect), JuMP.Variable, JuMP.Variable})
    precompile(Tuple{typeof(Base.collect_to!), Array{QpcrAnalysis.MeltCurveTa, 1}, Base.Generator{Array{DataStructures.OrderedDict{String, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1747#1756")){Bool, Float64, Float64, Bool, DataStructures.OrderedDict{Symbol, Any}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.oftype), Float64, Base.Complex{Float64}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Array{AbstractFloat, 1}, Void}, Void, Array{AbstractFloat, 1}, Int64})
    precompile(Tuple{typeof(Base.print), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, String, Type{Int}, Type{Int}})
    precompile(Tuple{typeof(Base.Cartesian._nloops), Int64, Symbol, Symbol, Expr, Expr})
    precompile(Tuple{typeof(Base.push!), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##77#79")), typeof(Base.:(+)), Int64, Tuple{Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.dSFMT.dsfmt_fill_array_close_open!), Base.dSFMT.DSFMT_state, Ptr{Float64}, Int64})
    precompile(Tuple{typeof(Base.map), typeof(Base.Broadcast.broadcast_indices), Tuple{Array{Any, 1}, Int64}})
    precompile(Tuple{typeof(Base.:(/)), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.eachindex), Base.IndexLinear, DataArrays.DataArray{Float64, 2}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.reverse), Array{Int64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.Colon, Int64})
    precompile(Tuple{typeof(Base.Broadcast.map_newindexer), Tuple{Base.OneTo{Int64}}, Tuple{Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_c), typeof(identity), Type{(Array{T, N} where N) where T}, Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Int})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Base.BitArray{1}, Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.reshape), Array{Any, 1}, Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}, Tuple{}, Tuple{}})
    precompile(Tuple{typeof(Base.fill!), Array{Float32, 1}, Float32})
    precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Int64, 1}, Base.Colon})
    precompile(Tuple{typeof(Base.findmin), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.copy!), Array{Function, 1}, Tuple{typeof(Base.start), typeof(Base.next), typeof(Base.done)}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Int64, 1}, getfield(DataArrays, Symbol("##106#113"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.convert), Type{Array{Float64, N} where N}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Bool}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.UnitRange{Int64}, Int64})
    precompile(Tuple{typeof(Base.push!), Array{Array{ReverseDiffSparse.NodeData, 1}, 1}, Array{ReverseDiffSparse.NodeData, 1}})
    precompile(Tuple{typeof(Base.flipbits!), Base.BitArray{1}})
    precompile(Tuple{typeof(Base.vect), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Array{Symbol, 1}, Void}, Void, Array{Symbol, 1}, Int64})
    precompile(Tuple{typeof(Base.vect), QpcrAnalysis.AmpStepRampProperties, QpcrAnalysis.AmpStepRampProperties})
    precompile(Tuple{typeof(Base.Math.sind), Float64})
    precompile(Tuple{typeof(Base.fill!), Base.BitArray{2}, Bool})
    precompile(Tuple{typeof(Base.median!), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.showall), Base.AbstractIOBuffer{Array{UInt8, 1}}, ErrorException})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Float64, Int64})
    precompile(Tuple{typeof(Base.flush), Base.TTY})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(Base, Symbol("##77#79")), typeof(identity), Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.convert), Type{Array{Symbol, 2}}, Array{Symbol, 2}})
    precompile(Tuple{typeof(Base.sort!), Array{Float64, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.convert), Type{Array{Array{String, 1}, 2}}, Array{Array{String, 1}, 2}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Any}, typeof(identity), Symbol, Int64})
    precompile(Tuple{typeof(Base.hash), Tuple{Int32, Int32, UInt64}, UInt64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Int64, Void}, Void, Int64, Int64})
    precompile(Tuple{typeof(Base.vcat), Array{Base.StackTraces.StackFrame, 1}, Array{Base.StackTraces.StackFrame, 1}, Array{Base.StackTraces.StackFrame, 1}, Array{Base.StackTraces.StackFrame, 1}, Array{Base.StackTraces.StackFrame, 1}})
    precompile(Tuple{typeof(Base.DataFmt.store_cell), Base.DataFmt.DLMStore{Float64}, Int64, Int64, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Array{Float64, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Int}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Int64, 1}, Float64})
    precompile(Tuple{typeof(Base.convert), Type{Array{Float64, 2}}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.LinAlg.generic_vecnormMinusInf), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.generic_vecnorm2), Array{Float64, 1}})
    precompile(Tuple{getfield(Base.Mmap, Symbol("##mmap#1")), Bool, Bool, typeof(identity), Base.IOStream, Type{Array{UInt8, 1}}, Tuple{Int64}, Int64})
    precompile(Tuple{typeof(Base.LinAlg.LAPACK.getrf!), Array{Float32, 2}})
    precompile(Tuple{typeof(Base.:(-)), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{QpcrAnalysis.TargetResultEle, 1}, QpcrAnalysis.TargetResultEle})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Base.LinAlg.RowVector{Any, Array{Any, 1}}})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 1}, Int64, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{DataStructures.OrderedDict{Any, Any}, 1}})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Union{Tuple{Integer, Integer}, Char, Integer}}, Symbol})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Tuple{String, Int64}})
    precompile(Tuple{typeof(Base.findmax), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.DataFmt.colval), String, Int64, Int64, Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.DataFmt.readdlm_string), String, Char, Type{Int}, Char, Bool, Base.Dict{Symbol, Union{Tuple{Integer, Integer}, Char, Integer}}})
    precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{Symbol, Int64}, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{DataStructures.OrderedDict{Any, Any}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1763#1771")){Array{Symbol, 1}, Array{DataStructures.OrderedDict{Any, Any}, 1}, Array{Int64, 1}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Bool}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{QpcrAnalysis.AbstractAmpFitted, 2}, Base.IndexLinear, Array{QpcrAnalysis.SfcFitted, 2}})
    precompile(Tuple{typeof(Base.fill!), Array{QpcrAnalysis.GroupResultEle, 1}, QpcrAnalysis.GroupResultEle})
    precompile(Tuple{typeof(Base.LinAlg.norm1), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.similar), Array{String, 1}, Type{Float64}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Char}, Char, Symbol, Int64})
    precompile(Tuple{typeof(Base._getindex), Base.IndexLinear, Array{Any, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.all), typeof(Base.isnan), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{Int64, 2}, Base.Colon, Int64})
    precompile(Tuple{typeof(Base.vcat), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType}, Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{String, Array{Float64, 2}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1378#1379")){Array{String, 1}, Array{Float64, 3}}}, Int64, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{String, Int64}, Int64, String, Int64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(Base, Symbol("##65#66")){Base.Dict{Int64, Int64}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.to_indices), Array{Int64, 1}, Tuple{Base.OneTo{Int64}}, Tuple{Array{Bool, 1}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##105#112")){Tuple{DataType, DataType, DataType, DataType}, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Any, Tuple{Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Array{Any, 1}}}}})
    precompile(Tuple{typeof(Base.eltype), Type{Tuple{Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}}}})
    precompile(Tuple{getfield(Base, Symbol("##showarray#263")), Bool, typeof(identity), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 1}, Bool})
    precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{getfield(Base.DataFmt, Symbol("#kw##readdlm")), Array{Any, 1}, typeof(Base.DataFmt.readdlm), String, Char, Char})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.round), Array{Float64, 3}, Tuple{Tuple{Bool, Bool, Bool}, Tuple{}}, Tuple{Tuple{Int64, Int64, Int64}, Tuple{}}, Array{Float64, 3}, Tuple{Int64}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{3}}})
    precompile(Tuple{typeof(Base.LinAlg.LAPACK.chktrans), Char})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{DataArrays.DataArray{Any, 1}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.eltype), Type{Tuple{Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}, Array{Float64, 2}}}})
    precompile(Tuple{typeof(Base.setindex!), JuMP.VectorView{ForwardDiff.Partials{1, Float64}}, ForwardDiff.Partials{1, Float64}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.print), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{Array{Int64, 2}, 1}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Bool}, Int64, Int64})
    precompile(Tuple{typeof(Base.similar), DataArrays.DataArray{Float64, 1}, Type{Int}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.Math.sec), Float64})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Float64, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.hash), Tuple{Int32, Void, UInt64}, UInt64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Bool}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Bool, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{Tuple{Symbol, Symbol}, 1}, getfield(JuMP, Symbol("##114#115"))}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Int32, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{Array{Float64, 2}, 1}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.rehash!), Base.Dict{Array{Float64, 1}, Void}, Int64})
    precompile(Tuple{typeof(Base._setindex!), Base.Dict{Int64, Void}, Void, Int64, Int64})
    precompile(Tuple{typeof(Base.print), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, String, Type{Int}, Int})
    precompile(Tuple{typeof(Base.setindex!), Base.ObjectIdDict, Int, Int})
    precompile(Tuple{typeof(Base.map), typeof(identity), Base.KeyIterator{DataStructures.OrderedDict{String, Float64}}})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(Base, Symbol("##77#79")), typeof(identity), Tuple{Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{DataArrays.DataArray{Any, 2}, DataArrays.DataArray{Any, 2}}})
    precompile(Tuple{typeof(Base.setindex!), Array{Integer, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1811#1820")){Int64, DataStructures.OrderedDict{String, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.cat_indices), DataArrays.DataArray{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.done), Tuple{Float64, Float64, Float64, Float64}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Bool}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1635#1654")){Array{Int64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.isequal), Tuple{Base.StackTraces.StackFrame, String, Int64}, Tuple{Base.StackTraces.StackFrame, String, Int64}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Base.Pair{Int64, DataArrays.DataArray{Any, 2}}, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1378#1379")){Array{Int64, 1}, DataArrays.DataArray{Any, 3}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), JuMP.VectorView{ForwardDiff.Partials{4, Float64}}, ForwardDiff.Partials{4, Float64}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.log), Float64, Float64})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1635#1654")){Array{Float64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Float64, Array{AbstractFloat, 1}, Float64}})
    precompile(Tuple{typeof(Base.vcat), DataArrays.DataArray{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.all), getfield(DataStructures, Symbol("##10#12")), Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1764#1772")){DataStructures.OrderedDict{Any, Any}, Array{Float64, 1}}}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType}, Int64}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1670#1671")){QpcrAnalysis.AmpStepRampOutput}}, Int64, Int64})
    precompile(Tuple{typeof(Base.min), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.istriu), Array{Float32, 2}})
    precompile(Tuple{typeof(Base.wait), Base.Timer})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, DataStructures.OrderedDict{String, Array{String, 1}}})
    precompile(Tuple{typeof(Base.any), getfield(DataStructures, Symbol("##9#11")){Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1764#1772")){DataStructures.OrderedDict{Any, Any}, Array{Float64, 1}}}}, Array{Function, 1}})
    precompile(Tuple{typeof(Base.median!), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base._maybe_reshape_parent), Array{Float64, 3}, Tuple{Bool, Bool, Bool}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1647#1666")){Array{Int64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, DataStructures.OrderedDict{String, Any}}, Int64, Int64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Float64, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Float64}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, typeof(identity), Symbol})
    precompile(Tuple{typeof(Base.pop!), Array{Function, 1}})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(DataFrames, Symbol("##13#17")), typeof(Base.promote_type), Type{Int}, Tuple{DataType, DataType}, Int64})
    precompile(Tuple{typeof(Base.any), getfield(DataStructures, Symbol("##9#11")){Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1761#1769")){Base.BitArray{1}, DataStructures.OrderedDict{String, Array{Any, 1}}}}}, Array{Function, 1}})
    precompile(Tuple{typeof(Base._getindex), Base.IndexLinear, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.countnz), Base.BitArray{1}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1646#1665")){Array{Int64, 2}}}, Int64, Int64})
    precompile(Tuple{typeof(Base.:(==)), Tuple{Base.UnitRange{Int64}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Tuple{Float64, Bool}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Int32, 1}, Base.Generator{Array{JuMP.Variable, 1}, getfield(JuMP, Symbol("##126#131"))}})
    precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.scalarmin), Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.isequal), Tuple{Int64, Int64}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.index_ndims), Base.OneTo{Int64}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}, Tuple})
    precompile(Tuple{typeof(Base.sprint), typeof(identity), Bool})
    precompile(Tuple{typeof(Base.filter), getfield(QpcrAnalysis, Symbol("##1381#1388")), Array{String, 1}})
    precompile(Tuple{typeof(Base.DataFmt.colval), String, Int64, Int64, Array{Any, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.count), getfield(Base, Symbol("##138#139")), Tuple{Bool}})
    precompile(Tuple{typeof(Base.similar), DataArrays.DataArray{Any, 2}, Type{Int}, Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base.fill!), Array{Float32, 2}, Float32})
    precompile(Tuple{typeof(Base.copy!), Array{Int32, 1}, Base.Generator{Array{JuMP.Variable, 1}, getfield(JuMP, Symbol("##124#129"))}})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(Base, Symbol("##77#79")), typeof(identity), Tuple{Array{Int64, 2}, Array{Int64, 2}}})
    precompile(Tuple{typeof(Base.throw_checksize_error), DataArrays.DataArray{Float64, 1}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1810#1819")){DataStructures.OrderedDict{String, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.map), Type{Int}, Array{AbstractString, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Any, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.all), getfield(DataStructures, Symbol("##10#12")), Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1761#1769")){Base.BitArray{1}, DataStructures.OrderedDict{String, Array{Any, 1}}}}})
    precompile(Tuple{typeof(Base.copy!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Char, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##77#79")), typeof(Base.:(+)), Int64, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.any), getfield(DataFrames, Symbol("##16#20")), Tuple{DataType}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Symbol, Union{Tuple{Integer, Integer}, Char, Integer}}, Symbol})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(DataFrames, Symbol("##13#17")), typeof(identity), Tuple{DataType, DataType}})
    precompile(Tuple{typeof(Base.fill!), Array{Array{Any, 1}, 2}, Array{Any, 1}})
    precompile(Tuple{typeof(Base.throw_checksize_error), Array{Any, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{DataArrays.DataArray{Float64, 2}, DataArrays.DataArray{Float64, 2}}})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{DataStructures.OrderedDict{String, Float64}, 2}, Base.IndexLinear, Array{DataStructures.OrderedDict{String, AbstractFloat}, 2}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType, DataType, DataType}, Int64}}})
    precompile(Tuple{typeof(Base.push!), Array{Array{Float64, 2}, 1}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Any, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.get), Base.Dict{Symbol, Union{Tuple{Integer, Integer}, Char, Integer}}, Symbol, Bool})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_eltype), typeof(identity), Base.BitArray{1}, Array{Any, 1}, Int})
    precompile(Tuple{typeof(Base.similar), Array{Int64, 1}, Type{DataStructures.OrderedDict{Any, Any}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{Symbol, Bool}, Int64, Int64})
    precompile(Tuple{typeof(Base.ntuple), getfield(Base, Symbol("##110#112")), Int64})
    precompile(Tuple{typeof(Base.any), getfield(DataFrames, Symbol("##16#20")), Tuple{DataType, DataType}})
    precompile(Tuple{typeof(Base.similar), Array{Int64, 2}, Type{Int}, Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(DataFrames, Symbol("##13#17")), typeof(Base.promote_type), Type{Int}, Tuple{DataType}, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Any, Void}, Tuple{Base.StackTraces.StackFrame, String, Int64}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType, DataType, DataType}, Int64}}})
    precompile(Tuple{typeof(Base.maximum), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{DataArrays.DataArray{Float64, 2}}})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(Base, Symbol("##77#79")), typeof(identity), Tuple{Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(DataFrames, Symbol("##13#17")), typeof(identity), Tuple{DataType}})
    precompile(Tuple{typeof(Base.fill!), Array{Symbol, 2}, Symbol})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##77#79")), typeof(Base.:(+)), Int64, Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.reducedim_initarray), Array{Float64, 2}, Int64, Float64, Type{Float64}})
    precompile(Tuple{typeof(Base.next), Base.Iterators.Take{Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}}, Tuple{Int64, Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.next), Array{QpcrAnalysis.TargetResultEle, 1}, Int64})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(Base, Symbol("##77#79")), typeof(identity), Tuple{Array{Float64, 2}, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Symbol, 1}, getfield(DataFrames, Symbol("##8#9")){DataFrames.Index}}, Int64, Int64})
    precompile(Tuple{typeof(Base._getindex), Base.IndexLinear, Array{Float64, 2}, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.setdiff), Base.UnitRange{Int64}, Int64})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Array{Any, 1}, Array{Any, 1}})
    precompile(Tuple{typeof(Base.count), getfield(Base, Symbol("##138#139")), Tuple{Bool, Bool, Bool}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}, Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{typeof(Base.push!), Array{AbstractFloat, 1}, Float64})
    precompile(Tuple{typeof(Base.copy), Float64})
    precompile(Tuple{typeof(Base.show_vector), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, String, String})
    precompile(Tuple{typeof(Base.collect_to!), Array{Float64, 1}, Base.Generator{Array{JuMP.Variable, 1}, typeof(JuMP.getvalue)}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast.containertype), Base.BitArray{1}, Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{QpcrAnalysis.K4Deconv, DataArrays.DataArray{Any, 3}}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{AbstractFloat, 1}, Float64, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.fill!), Array{QpcrAnalysis.SfcFitted, 2}, QpcrAnalysis.SfcFitted})
    precompile(Tuple{typeof(Base.setindex!), Array{DataArrays.DataArray{Any, 1}, 1}, DataArrays.DataArray{Any, 1}, Int64})
    precompile(Tuple{typeof(Base.push!), Array{Real, 1}, Int64})
    precompile(Tuple{typeof(Base.isempty), Base.BitArray{2}})
    precompile(Tuple{typeof(Base.slicedim), Array{Any, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{DataArrays.DataArray{Any, 2}}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{QpcrAnalysis.MeltCurveTF, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.fill!), Array{String, 2}, String})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Array{DataStructures.OrderedDict{String, Any}, 1}, 1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1632#1651")){Int64}}})
    precompile(Tuple{typeof(Base.mapfoldl), getfield(Base, Symbol("##77#79")), typeof(identity), Tuple{Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.DataFmt.store_cell), Base.DataFmt.DLMStore{Any}, Int64, Int64, Bool, Int64, Int64})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Array{QpcrAnalysis.GroupResultEle, 1}, 1}})
    precompile(Tuple{typeof(Base.Math.cos_kernel), Base.Math.DoubleFloat64})
    precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Array{Symbol, 1}})
    precompile(Tuple{typeof(Base._similar_for), Array{Float64, 2}, Type{Int}, Base.Generator{Array{Float64, 2}, getfield(QpcrAnalysis, Symbol("##1621#1623"))}, Base.HasShape})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Tuple{String, Int64, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.MPFR.setprecision), getfield(Base, Symbol("##548#549")){Float64, Base.Irrational{:π}, Base.Rounding.RoundingMode{:Up}}, Type{Base.MPFR.BigFloat}, Int64})
    precompile(Tuple{typeof(Base.setdiff), Base.UnitRange{Int64}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.throw_checksize_error), DataArrays.DataArray{Any, 2}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.push!), Array{Tuple{String, Int64}, 1}, Tuple{String, Int64}})
    precompile(Tuple{typeof(Base.setdiff), Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.count), getfield(Base, Symbol("##138#139")), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.LAPACK.getri!), Array{Float32, 2}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.any), getfield(DataFrames, Symbol("##14#18")), Tuple{DataType}})
    precompile(Tuple{typeof(Base.findnext), Tuple{Int64, Int64}, Int64, Int64})
    precompile(Tuple{typeof(Base.open), String, Bool, Bool, Bool, Bool, Bool})
    precompile(Tuple{typeof(Base.open), typeof(Base.readstring), String})
    precompile(Tuple{typeof(Base.length), DataStructures.OrderedDict{String, Any}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 3}, Tuple{Int64, Int64, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.reshape), Array{Float64, 3}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.hash), Base.Set{Array{Float64, 1}}, UInt64})
    precompile(Tuple{typeof(Base.any), getfield(Base, Symbol("##136#137")){String}, Array{String, 1}})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##77#79")), typeof(Base.:(+)), Int64, Tuple{Array{Float64, 2}, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Array{QpcrAnalysis.TargetResultEle, 1}, 1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Base.BitArray{1}, Array{Any, 1}, Int64}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Array{Int64, 1}, 1}})
    precompile(Tuple{typeof(Base._array_for), Type{Float64}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.any), getfield(DataFrames, Symbol("##14#18")), Tuple{DataType, DataType}})
    precompile(Tuple{typeof(Base.print), Base.TTY, String, String, Int})
    precompile(Tuple{typeof(Base.size), DataArrays.DataArray{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.mapfoldl_impl), getfield(Base, Symbol("##77#79")), typeof(Base.:(+)), Int64, Tuple{Array{Int64, 2}, Array{Int64, 2}}, Int64})
    precompile(Tuple{typeof(Base._array_for), Type{Int64}, Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.copy!), Array{Int32, 1}, Base.Generator{Array{JuMP.Variable, 1}, getfield(JuMP, Symbol("##125#130"))}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{getfield(Base.Sort, Symbol("##sort!#7")), Base.Sort.MergeSortAlg, typeof(identity), typeof(identity), Bool, Base.Order.ForwardOrdering, typeof(identity), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.vcat), Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Base.BitArray{1}, Array{Any, 1}, Int})
    precompile(Tuple{typeof(Base._similar_for), Array{Float64, 2}, Type{Int}, Base.Generator{Array{Float64, 2}, (getfield(QpcrAnalysis, Symbol("##1622#1624"))){Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.map), typeof(Base.Broadcast.broadcast_indices), Tuple{Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.cat), Int64, DataArrays.DataArray{Float64, 2}})
    precompile(Tuple{typeof(Base._array_for), Type{Void}, Base.UnitRange{Int64}, Base.HasShape})
    precompile(Tuple{typeof(Base._getindex), Base.IndexLinear, Array{Int64, 2}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base._array_for), Type{Array{Int64, 2}}, Base.UnitRange{Int64}, Base.HasShape})
    precompile(Tuple{typeof(Base.push!), Array{Bool, 1}, Bool})
    precompile(Tuple{typeof(Base.cat_indices), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Int64})
    precompile(Tuple{typeof(Base.argtail), Base.OneTo{Int64}, Base.OneTo{Int64}, Int})
    precompile(Tuple{typeof(Base.fill!), Array{Array{String, 1}, 2}, Array{String, 1}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{QpcrAnalysis.GroupResultEle, 1}})
    precompile(Tuple{typeof(Base.all), getfield(JuMP, Symbol("##61#64")), Tuple{DataType, DataType}})
    precompile(Tuple{typeof(Base.setindex!), Array{Real, 2}, Float64, Int64})
    precompile(Tuple{typeof(Base.fill), DataStructures.OrderedDict{String, AbstractFloat}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_eltype), typeof(identity), Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}, Base.LinAlg.RowVector{Any, Array{Any, 1}}})
    precompile(Tuple{getfield(Base, Symbol("##sum!#406")), Bool, typeof(identity), typeof(identity), Array{Float64, 3}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.cat), Int64, DataArrays.DataArray{Float64, 2}, DataArrays.DataArray{Float64, 2}})
    precompile(Tuple{typeof(Base.fill!), Array{DataStructures.OrderedDict{String, AbstractFloat}, 2}, DataStructures.OrderedDict{String, AbstractFloat}})
    precompile(Tuple{typeof(Base.cat), Int64, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base._similar_for), Array{Int64, 1}, Type{Int}, Base.Generator{Array{Int64, 1}, (getfield(QpcrAnalysis, Symbol("##1744#1753"))){Int64}}, Base.HasShape})
    precompile(Tuple{typeof(Base.getindex), Tuple{UInt64, Tuple{}}, Int64})
    precompile(Tuple{typeof(Base.setindex!), DataArrays.DataArray{Float64, 1}, DataArrays.DataArray{Float64, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Any, 1}})
    precompile(Tuple{typeof(Base.map), typeof(Base.Broadcast.broadcast_indices), Tuple{Array{Int64, 1}, Int64, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.similar), DataArrays.DataArray{Float64, 1}, Type{Union{Float64, Missings.Missing}}})
    precompile(Tuple{typeof(Base.push!), Array{Real, 1}, Float64})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Array{Float64, 2}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.cat_indices), Array{AbstractFloat, 1}, Int64})
    precompile(Tuple{typeof(Base.next), Base.Iterators.Take{Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}}, Tuple{Int64, Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.getindex), DataStructures.OrderedDict{String, Any}, String})
    precompile(Tuple{typeof(Base._collect), Array{DataStructures.OrderedDict{Any, Any}, 1}, Base.Generator{Array{DataStructures.OrderedDict{Any, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1765#1773"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.write), Base.TTY, Char})
    precompile(Tuple{typeof(Base.push!), Array{FactCheck.Result, 1}, FactCheck.Success})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Any, 3}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.besselj), Float64, Base.Complex{Float64}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.fieldnames), QpcrAnalysis.ClusterAnalysisResult})
    precompile(Tuple{typeof(Base.Math.acoth), Float64})
    precompile(Tuple{typeof(Base.fill!), Base.SubArray{Float64, 1, Array{Float64, 1}, Tuple{Base.UnitRange{Int64}}, true}, Float64})
    precompile(Tuple{typeof(Base.map), typeof(Base.Broadcast.broadcast_indices), Tuple{Array{Float64, 1}, Int64, Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.similar), Array{Float64, 1}, Type{Float64}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Any, 1}, Array{Any, 1}})
    precompile(Tuple{typeof(Base.size), DataArrays.DataArray{Any, 2}, Int64})
    precompile(Tuple{typeof(Base.keys), DataStructures.OrderedDict{String, Float64}})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 2}, Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Any, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.sort), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Int64, 2}, Tuple{Tuple{Bool, Bool}, Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}, Tuple{Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Base.IteratorsMD.CartesianIndex{2}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.print_with_color), Symbol, String, String, String})
    precompile(Tuple{typeof(Base.nbitslen), Int64, Int64})
    precompile(Tuple{typeof(Base.colon), Float64, Float64, Float64})
    precompile(Tuple{typeof(Base.repremptyarray), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{String, 1}})
    precompile(Tuple{typeof(Base.start), Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base.index_dimsum), Base.OneTo{Int64}, Int64, Int64})
    precompile(Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool, Bool}, Tuple{}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.tryparse_internal), Type{Bool}, String, Int64, Int64, Int64, Bool})
    precompile(Tuple{typeof(Base.Random.rand!), Base.Random.MersenneTwister, Array{Float64, 2}, Int64, Type{Base.Random.CloseOpen}})
    precompile(Tuple{typeof(Base.vcat), Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.fill), Symbol, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.hcat), DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}})
    precompile(Tuple{typeof(Base.cat), Int64, DataArrays.DataArray{Any, 2}})
    precompile(Tuple{typeof(Base.fill), QpcrAnalysis.SfcFitted, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{Int32, 1}, Int64})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 3}, Int64})
    precompile(Tuple{typeof(Base.getindex), Tuple{UInt64, Tuple{UInt64, Tuple{}}}, Int64})
    precompile(Tuple{typeof(Base.size), DataArrays.DataArray{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base._array_for), Type{Array{QpcrAnalysis.TargetResultEle, 1}}, Array{DataFrames.DataFrame, 1}, Base.HasShape})
    precompile(Tuple{typeof(Base.acos), Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.print), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Bool})
    precompile(Tuple{typeof(Base.endof), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.Math.asind), Float64})
    precompile(Tuple{typeof(Base.invdigamma), Float64})
    precompile(Tuple{typeof(Base.show), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, DataType})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.length), Array{JuMP.Variable, 1}})
    precompile(Tuple{typeof(Base.SparseArrays.nzrange), Base.SparseArrays.SparseMatrixCSC{Bool, Int64}, Int64})
    precompile(Tuple{typeof(Base.cat), Int64, DataArrays.DataArray{Any, 2}, DataArrays.DataArray{Any, 2}})
    precompile(Tuple{typeof(Base.reducedim_initarray), Array{Int64, 2}, Int64, Int64, Type{Float64}})
    precompile(Tuple{typeof(Base.uncolon), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.Colon, Int64}})
    precompile(Tuple{typeof(Base.vcat), Float64, Array{AbstractFloat, 1}, Float64})
    precompile(Tuple{typeof(Base.string), Expr})
    precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Base.BitArray{1}, Int64})
    precompile(Tuple{typeof(Base.fill), Array{String, 1}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Any, Tuple{Array{Any, 1}, Array{Any, 1}}}}})
    precompile(Tuple{typeof(Base.include_from_node1), String})
    precompile(Tuple{typeof(Base.transpose), Array{Any, 1}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Int64, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 3}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.pop!), Array{AbstractString, 1}})
    precompile(Tuple{typeof(Base.argtail), Base.OneTo{Int64}, Int64, Int64})
    precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.cat_t), Int64, Type{Int}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.similar), Array{Int64, 1}, Type{Array{Any, 1}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Array{Any, 2}, Base.IteratorsMD.CartesianIndex{2}})
    precompile(Tuple{typeof(Base.cat), Int64, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base._collect), Array{DataStructures.OrderedDict{Any, Any}, 1}, Base.Generator{Array{DataStructures.OrderedDict{Any, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1766#1774"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Base.Pair{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.all), Base.BitArray{2}})
    precompile(Tuple{typeof(Base.argtail), Base.BitArray{1}, Array{Any, 1}, Int})
    precompile(Tuple{typeof(Base.similar), Array{Any, 1}, Type{Bool}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.fill), Array{Any, 1}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{DataStructures.OrderedDict{Any, Any}, 1}, DataStructures.OrderedDict{Any, Any}, Int64})
    precompile(Tuple{typeof(Base.similar), Array{DataStructures.OrderedDict{Any, Any}, 1}, Type{Int64}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.cat_indices), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Real, 1}})
    precompile(Tuple{typeof(Base.vcat), Array{Float64, 2}, Array{Int64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1675#1687")){DataFrames.SubDataFrame{Array{Int64, 1}}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{Any, 1}, Int64})
    precompile(Tuple{typeof(Base.to_indices), Array{Float64, 2}, Tuple{Base.OneTo{Int64}}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{AbstractFloat, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Int64, 2}, Int64, Base.IteratorsMD.CartesianIndex{2}})
    precompile(Tuple{typeof(Base.any), getfield(JuMP, Symbol("##120#121")), Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.any), typeof(Base.identity), Array{Bool, 1}})
    precompile(Tuple{typeof(Base.Math.csc), Float64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Array{Int64, 2}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Any, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Float64, Array{Float64, 1}, Float64}})
    precompile(Tuple{typeof(Base.convert), Type{DataStructures.OrderedDict{String, Float64}}, DataStructures.OrderedDict{String, AbstractFloat}})
    precompile(Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool, Bool}, Tuple{Int64, Int64, Int64}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1407#1412")){DataArrays.DataArray{Float64, 3}, DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.convert), Type{Union{Float64, Missings.Missing}}, Float64})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{T, 2} where T, 1}, Array{Int64, 2}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.LogicalIndex{Int64, Array{Bool, 1}}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.all), getfield(DataFrames, Symbol("##21#26")), Array{Array{Symbol, 1}, 1}})
    precompile(Tuple{typeof(Base.LinAlg.transpose8x8), UInt64})
    precompile(Tuple{typeof(Base.Cartesian.lreplace!), Symbol, Base.Cartesian.LReplace{String}})
    precompile(Tuple{typeof(Base.done), Base.Iterators.Take{Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}}, Tuple{Int64, Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.vcat), Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{getfield(Base, Symbol("##print_with_color#513")), Bool, typeof(identity), Symbol, Base.TTY, String, String})
    precompile(Tuple{typeof(Base.similar), Array{AbstractFloat, 1}, Type{Float64}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.copy!), Array{Array{DataStructures.OrderedDict{String, Any}, 1}, 1}, Base.ValueIterator{DataStructures.OrderedDict{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}}})
    precompile(Tuple{getfield(Base, Symbol("##parse#235")), Bool, typeof(identity), String})
    precompile(Tuple{typeof(Base.LinAlg.scale!), JuMP.VectorView{Float64}, Float64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Float64, Tuple{Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}}}}})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Array{Int64, 2}, Array{Int64, 2}}})
    precompile(Tuple{typeof(Base.getindex), Int64, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Any, 3}, Tuple{Int64, Int64, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Array{AbstractFloat, 1}, Float64})
    precompile(Tuple{typeof(Base.covzm), Array{Float64, 1}, Array{Float64, 1}, Bool})
    precompile(Tuple{typeof(Base.bessely0), Float64})
    precompile(Tuple{typeof(Base.cat_shape), Tuple{Bool, Bool, Bool}, Tuple{}, Tuple{Int64, Int64}, Tuple{Int64, Int64}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base._array_for), Type{Array{Int64, 1}}, Array{DataFrames.DataFrame, 1}, Base.HasShape})
    precompile(Tuple{typeof(Base.done), Base.Iterators.Take{Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}}, Tuple{Int64, Base.IteratorsMD.CartesianIndex{2}}})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1744#1753")){Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.broadcast), typeof(identity), Float64, Float64})
    precompile(Tuple{typeof(Base.cat), Int64, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Base.Pair{String, Array{Int64, 2}}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.similar), Array{String, 1}, Type{Array{Any, 1}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._array_for), Type{Float64}, Base.UnitRange{Int64}, Base.HasShape})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{QpcrAnalysis.TargetResultEle, 1}, 1}, Array{QpcrAnalysis.TargetResultEle, 1}, Int64})
    precompile(Tuple{typeof(Base.println), String, String, String})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Any, 2}, Tuple{Base.OneTo{Int64}, Int64}})
    precompile(Tuple{typeof(Base.reshape), Array{Any, 1}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1634#1653")){Array{Int64, 1}, Array{Int64, 2}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.similar), Array{Int64, 1}, Type{DataStructures.OrderedDict{String, Any}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Array{DataStructures.OrderedDict{String, Any}, 1}}, Int64, Int64})
    precompile(Tuple{getfield(Base, Symbol("##print_with_color#514")), Bool, typeof(identity), Symbol, String, String})
    precompile(Tuple{typeof(Base.Math.acosd), Float64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Int64, Array{AbstractFloat, 1}}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_t), typeof(identity), Type{Any}, Tuple{Base.OneTo{Int64}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Float64, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Any}, Bool, String})
    precompile(Tuple{typeof(Base.getindex), Array{ReverseDiffSparse.NodeData, 1}, Int64})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Array{Int64, 2}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{getfield(Base, Symbol("##parse#235")), Bool, typeof(identity), Base.SubString{String}})
    precompile(Tuple{typeof(Base.Math.acsc), Float64})
    precompile(Tuple{typeof(Base.fill), String, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.similar), Array{Symbol, 1}, Type{Bool}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{DataArrays.DataArray{Any, 2}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{Symbol, Ipopt.IpoptSolver}, Int64, Int64})
    precompile(Tuple{typeof(Base.similar), Array{Float64, 2}, Type{Int}, Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 3}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.fill!), Base.BitArray{3}, Bool})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 3}, Tuple{Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base._array_for), Type{Array{QpcrAnalysis.GroupResultEle, 1}}, Array{DataFrames.DataFrame, 1}, Base.HasShape})
    precompile(Tuple{typeof(Base.next), Tuple{Float64, Float64, Float64, Float64}, Int64})
    precompile(Tuple{typeof(Base.length), Array{JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{Float64, JuMP.Variable}}, 1}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1832#1848")){DataStructures.OrderedDict{String, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.cat_size), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Int64})
    precompile(Tuple{typeof(Base.map), typeof(Base.cat_size), Tuple{Array{Float64, 2}, Array{Float64, 2}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Any, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{typeof(Base.indexed_next), Array{Int64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Base.Pair{Int64, DataArrays.DataArray{Any, 2}}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.cat), Int64, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Array{Int64, 1}, Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 3}, Base.Colon, Int64, Int64})
    precompile(Tuple{typeof(Base.convert), Type{Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Int64, Void}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Array{AbstractFloat, 1}, Base.IteratorsMD.CartesianIndex{1}})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Bool}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.getindex), Type{Int64}, Int64})
    precompile(Tuple{typeof(Base.done), Array{Array{Int64, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.convert), Type{Array{Float32, 2}}, Array{Float32, 2}})
    precompile(Tuple{typeof(Base.replace), String, Base.Pair{String, String}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{QpcrAnalysis.AmpStepRampProperties, 1}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_eltype), typeof(identity), Float64, Array{Int64, 1}, Int})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 1}, Array{Float64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1829#1830")){DataStructures.OrderedDict{String, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.done), Array{QpcrAnalysis.TargetResultEle, 1}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Float64, 3}, Tuple{Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}}})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, DataArrays.DataArray{Float64, 1}}, Int64, Int64})
    precompile(Tuple{typeof(Base.size), Array{Int64, 2}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.UnitRange{Int64}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{typeof(Base.similar), Array{String, 1}, Type{Array{Float32, 1}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.convert), Type{Array{Float64, 1}}, Array{Any, 1}})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Array{DataStructures.OrderedDict{K, V} where V where K, 1}}, Int64, Int64})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{Symbol, Tuple{Base.StackTraces.StackFrame, String, Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{Real, 1}, Int64})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Array{Float64, 1}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Array{Int64, 2}, 1}, Base.IndexLinear, Array{Array{Float64, 2}, 1}})
    precompile(Tuple{typeof(Base.length), Array{JuMP.GenericQuadConstraint{JuMP.GenericQuadExpr{Float64, JuMP.Variable}}, 1}})
    precompile(Tuple{getfield(Base, Symbol("##77#79")), Array{Float64, 2}})
    precompile(Tuple{typeof(Base._collect), Array{DataStructures.OrderedDict{Any, Any}, 1}, Base.Generator{Array{DataStructures.OrderedDict{Any, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1762#1770")){Array{Symbol, 1}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.copy!), Array{String, 1}, Base.KeyIterator{DataStructures.OrderedDict{String, Any}}})
    precompile(Tuple{typeof(Base.similar), Array{Float64, 2}, Type{Int64}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.similar), Array{Symbol, 1}, Type{Array{Float64, 2}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1760#1768")){DataStructures.OrderedDict{String, Array{Any, 1}}, Array{Symbol, 1}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Array{Float64, 1}}, Int64, Int64})
    precompile(Tuple{typeof(Base.SparseArrays.sparse!), Array{Int64, 1}, Array{Int64, 1}, Array{Bool, 1}, Int64, Int64, typeof(Base.:(|)), Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Bool, 1}, Array{Int64, 1}, Array{Int64, 1}, Array{Bool, 1}})
    precompile(Tuple{typeof(Base.argtail), Array{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1636#1655")){Array{Int64, 2}}}})
    precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{String, Array{Float64, 2}}, 1}, Base.Pair{String, Array{Float64, 2}}, Int64})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Tuple{Int64, Bool}, String})
    precompile(Tuple{typeof(Base.stride), Array{Float32, 2}, Int64})
    precompile(Tuple{typeof(Base.ones), Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{getfield(Base, Symbol("##showarray#263")), Bool, typeof(identity), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}, Bool})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{Int64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1637#1656")){Array{Int64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.resize!), Array{QpcrAnalysis.UniqCombinCenters, 1}, Int64})
    precompile(Tuple{getfield(Base, Symbol("##warn#523")), String, Bool, Void, Void, Void, Int64, typeof(identity), Base.TTY, String, String})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.UnitRange{Int64}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Base.LogicalIndex{Int64, Array{Bool, 1}}}})
    precompile(Tuple{typeof(Base.getindex), DataFrames.DataFrame, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), typeof(Base.:(-)), Array{Int64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Tuple{Array{Any, 1}, Array{Any, 1}}, Type{Base.Val{2}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}, Base.IteratorsMD.CartesianIndex{1}, Int64})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{DataStructures.OrderedDict{String, Any}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{QpcrAnalysis.K4Deconv, Array{Float64, 3}}, Int64, Int64})
    precompile(Tuple{typeof(Base.similar), Array{Float64, 2}, Type{Float64}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{QpcrAnalysis.GroupResultEle, 1}, 1}, Array{QpcrAnalysis.GroupResultEle, 1}, Int64})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{Bool, Array{Any, 1}, Array{Int64, 1}}, Int64, Int64})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.find), getfield(QpcrAnalysis, Symbol("##1648#1667")){Array{Int64, 2}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.cat_indices), Float64, Int64})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1384#1391")){DataStructures.OrderedDict{String, Any}, Array{String, 1}, Array{Int64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.scalarmax), Float64, Float64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_eltype), typeof(identity), Array{Int64, 2}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.convert), Type{JuMP.GenericAffExpr{Float64, JuMP.Variable}}, JuMP.GenericAffExpr{Float64, JuMP.Variable}})
    precompile(Tuple{typeof(Base.print), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Float64})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Int64}, Int64, Int64})
    precompile(Tuple{typeof(Base.convert), Type{JuMP.GenericQuadExpr{Float64, JuMP.Variable}}, JuMP.GenericQuadExpr{Float64, JuMP.Variable}})
    precompile(Tuple{typeof(Base.mapreduce), typeof(identity), typeof(identity), Tuple{DataType}})
    precompile(Tuple{typeof(Base.open), getfield(Base.DataFmt, Symbol("##12#13")){Int64}, String, String})
    precompile(Tuple{typeof(Base.broadcast!), typeof(identity), DataArrays.DataArray{Any, 2}, DataArrays.DataArray{Float64, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}})
    precompile(Tuple{typeof(Base.broadcast!), typeof(identity), DataArrays.DataArray{Float64, 1}, DataArrays.DataArray{Float64, 1}, DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Int64}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.getindex), Array{QpcrAnalysis.MeltCurveTF, 1}, Int64})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Float64}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.join), Array{Int64, 1}, String, String})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Symbol, 1}, Tuple{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.similar), Base.UnitRange{Int64}, Type{Base.Pair{String, Array{Float64, 2}}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{DataArrays.DataArray{Float64, 1}, 1}, Base.IndexLinear, Array{Array{Any, 1}, 1}})
    precompile(Tuple{typeof(Base.scalarmin), Float64, Float64})
    precompile(Tuple{typeof(Base.Sort.select!), Array{Float64, 1}, Int64, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.getindex), Array{DataArrays.DataArray{Any, 2}, 1}, Int64})
    precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1396#1399")){DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}, Array{Int64, 1}, Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.fill), Float64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.show_vector), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{Float64, 2}, String, String})
    precompile(Tuple{typeof(Base.isempty), Array{JuMP.Variable, 1}})
    precompile(Tuple{typeof(Base.haskey), DataStructures.OrderedDict{String, Any}, String})
    precompile(Tuple{typeof(Base.values), DataStructures.OrderedDict{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Float64, Array{Int64, 1}, Int})
    precompile(Tuple{typeof(Base.mapreduce), typeof(identity), typeof(identity), Tuple{DataType, DataType}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Int64, Int64}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_eltype), typeof(identity), Float64, Array{Float64, 1}, Int})
    precompile(Tuple{typeof(Base.zeros), Int64})
    precompile(Tuple{typeof(Base.mean), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{QpcrAnalysis.UniqCombinCenters, 1}, Int64})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{Bool, Bool, Bool}, Int64, Int64})
    precompile(Tuple{getfield(Base, Symbol("##77#79")), Array{Int64, 2}})
    precompile(Tuple{typeof(Base._depwarn), String, Base.JLOptions, Array{Ptr{Void}, 1}, Base.StackTraces.StackFrame})
    precompile(Tuple{typeof(Base.in), Int64, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.next), Array{Array{Int64, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base._collect), Array{Ptr{Void}, 1}, Base.Generator{Array{Ptr{Void}, 1}, typeof(Base.StackTraces.lookup)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.print_with_color), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, String, String})
    precompile(Tuple{typeof(Base.getindex), Array{AbstractFloat, 1}, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{Array{Any, 1}, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Float64, 2}, 1}, Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.all), getfield(Base, Symbol("##179#181")), Base.Dict{Symbol, Int64}})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base._cat), Array{Float64, 2}, Tuple{Int64, Int64}, Tuple{Bool, Bool}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.map), typeof(identity), Array{String, 1}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Any, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{AbstractFloat, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64, Int64}})
    precompile(Tuple{typeof(Base.vcat), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.eye), Type{Float32}, Int64, Int64})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmax), Base.IndexLinear, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.indexed_next), Base.Pair{String, Array{Any, 1}}, Int64, Int64})
    precompile(Tuple{typeof(Base.next), Float64, Bool})
    precompile(Tuple{typeof(Base.similar), Array{Int64, 1}, Type{Base.Pair{String, Array{Int64, 2}}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Int64, DataArrays.DataArray{Any, 2}}, 1}, Base.Pair{Int64, DataArrays.DataArray{Any, 2}}, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1397#1400")){Float64, Array{Int64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{Base.OneTo{Int64}}, Tuple{}, Tuple})
    precompile(Tuple{typeof(Base.endof), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.similar), Array{Array{Float64, 2}, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Any, 1}, Tuple{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.LinAlg.LAPACK.chkdiag), Char})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Float64, Array{Int64, 1}, Int64, Int})
    precompile(Tuple{typeof(Base.indexed_next), Tuple{Symbol, Array{Ptr{Void}, 1}}, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{QpcrAnalysis.GroupResultEle, 1}, Int64, Array{QpcrAnalysis.GroupResultEle, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{DataArrays.DataArray{Any, 2}, 1}, DataArrays.DataArray{Any, 2}, Int64})
    precompile(Tuple{typeof(Base.unsafe_write), JSON.Writer.StringContext{JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}}, Ptr{UInt8}, UInt64})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1833#1849")){Int64, DataStructures.OrderedDict{String, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.replace), Base.SubString{String}, Base.Pair{Base.Regex, String}})
    precompile(Tuple{typeof(Base.setindex!), Array{Int64, 1}, Int64, Base.IteratorsMD.CartesianIndex{1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Float32, 1}, 1}, Array{Float32, 1}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.Math.cot), Float64})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Int64, 2}, 1}, Array{Int64, 2}, Int64})
    precompile(Tuple{typeof(Base.length), Array{DataStructures.OrderedDict{Any, Any}, 1}})
    precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nref")), ANY, ANY, ANY})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1397#1400")){Float64, Array{Float64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.parent), Array{Float32, 2}})
    precompile(Tuple{typeof(Base.sum), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 2}, Tuple{Array{Int64, 1}, Base.Slice{Base.OneTo{Int64}}}})
    precompile(Tuple{typeof(Base.getindex), Array{Array{Float64, 2}, 1}, Int64})
    precompile(Tuple{typeof(Base.promote_eltype), Array{Float64, 2}, Array{Int64, 2}, Int})
    precompile(Tuple{typeof(Base.done), Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{2}}, Base.IteratorsMD.CartesianIndex{2}})
    precompile(Tuple{typeof(Base.copy!), Array{QpcrAnalysis.UniqCombinCenters, 1}, Base.ValueIterator{DataStructures.OrderedDict{Base.Set{Array{AbstractFloat, 1}}, QpcrAnalysis.UniqCombinCenters}}})
    precompile(Tuple{typeof(Base.reduce), typeof(identity), Array{Any, 1}})
    precompile(Tuple{typeof(Base.sum), Base.BitArray{1}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Float64, DataArrays.DataArray{Any, 1}, Int})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_eltype), typeof(identity), Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Int})
    precompile(Tuple{typeof(Base.copy!), Array{Symbol, 1}, Base.Generator{Tuple{Base.Pair{Symbol, QpcrAnalysis.GroupResultEle}}, getfield(DataFrames, Symbol("##35#37"))}})
    precompile(Tuple{typeof(Base.reduced_indices), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, Int64, Base.OneTo{Int64}})
    precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, getfield(QpcrAnalysis, Symbol("##1387#1394")){DataType, DataStructures.OrderedDict{String, Array{Int64, 2}}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.LinAlg.transpose_f!), typeof(Base.transpose), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.copy!), Array{AbstractFloat, 3}, Base.Generator{DataArrays.DataArray{Any, 3}, getfield(DataArrays, Symbol("##1#2"))}})
    precompile(Tuple{typeof(Base.convert), Type{DataStructures.OrderedDict{String, QpcrAnalysis.AssignGenosResult}}, DataStructures.OrderedDict{String, QpcrAnalysis.AssignGenosResult}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_indices), Float64, Array{Float64, 1}, Int64, Int})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}})
    precompile(Tuple{typeof(Base.literal_pow), typeof(Base.:(^)), Float64, Type{Base.Val{2}}})
    precompile(Tuple{typeof(Base.length), Array{QpcrAnalysis.GroupResultEle, 1}})
    precompile(Tuple{typeof(Base.isequal), Base.StackTraces.StackFrame, Base.StackTraces.StackFrame})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}}, Tuple{Tuple{Bool}, Tuple{Bool}, Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}, Tuple{Int64}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.reshape), Array{Float64, 3}, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Int64, 1}, Base.Set{Int64}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{AbstractFloat, 1}, Tuple{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.copy!), Array{Symbol, 1}, Base.Generator{Tuple{Base.Pair{Symbol, Int64}}, getfield(DataFrames, Symbol("##35#37"))}})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{Float64, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.with_output_color), typeof(identity), Symbol, Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}})
    precompile(Tuple{typeof(Base.length), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.copy!), Array{QpcrAnalysis.TargetResultEle, 1}, Int64, Array{QpcrAnalysis.TargetResultEle, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{DataStructures.OrderedDict{String, Any}, 1}, DataStructures.OrderedDict{String, Any}, Int64})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 2}, Array{Int64, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.LinAlg.norm), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.typejoin), Int, Type{Int}, Type{Int}, Type{Int}})
    precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{String, Array{Int64, 2}}, 1}, Base.Pair{String, Array{Int64, 2}}, Int64})
    precompile(Tuple{typeof(Base.copy!), Array{Symbol, 1}, Base.Generator{Tuple{Base.Pair{Symbol, QpcrAnalysis.TargetResultEle}}, getfield(DataFrames, Symbol("##35#37"))}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}, Base.LinAlg.RowVector{Any, Array{Any, 1}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{QpcrAnalysis.TargetResultEle, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{Base.OneTo{Int64}}, Tuple{}, Tuple{Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.throw_boundserror), Base.BitArray{1}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##5#6")){Expr}}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{Int64, 2}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1397#1400")){Float64, DataArrays.DataArray{Any, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1643#1662")){Int64}}})
    precompile(Tuple{typeof(Base.copy!), Array{Int64, 2}, Int64, Array{Int64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Any, 2}, Base.LinAlg.RowVector{Any, Array{Any, 1}}}, Tuple{Tuple{Bool, Bool}, Tuple{Bool, Bool}}, Tuple{Tuple{Int64, Int64}, Tuple{Int64, Int64}}, Base.IteratorsMD.CartesianIndex{2}}}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{AbstractFloat, 1}, Float64}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Float64, Void}, Float64})
    precompile(Tuple{typeof(Base.copy_exprs), Expr})
    precompile(Tuple{typeof(Base.cat_size), Array{AbstractFloat, 1}, Int64})
    precompile(Tuple{typeof(Base.reduced_indices), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Int64, Base.OneTo{Int64}})
    precompile(Tuple{typeof(Base.r_promote), typeof(identity), Float64})
    precompile(Tuple{typeof(Base.copy!), Array{Array{Int64, 1}, 1}, Base.KeyIterator{DataStructures.OrderedDict{Array{Int64, 1}, Array{Int64, 1}}}})
    precompile(Tuple{typeof(Base.getindex), Tuple{Array{Any, 2}, Array{AbstractString, 2}}, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1407#1412")){Array{Any, 3}, DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.length), Array{Array{Int64, 1}, 1}})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{typeof(Base.sizeof), Base.KeyError})
    precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Float64, 2}, Array{Float64, 2}, Base.Slice{Base.OneTo{Int64}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Int64, 1}, 1}, Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{AbstractFloat, 1}, Array{Float64, 1}}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1627#1630"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.floatrange), Type{Float64}, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##5#6")){Expr}}})
    precompile(Tuple{typeof(Base.isempty), Array{JuMP.SDConstraint, 1}})
    precompile(Tuple{typeof(Base.sum), Array{Bool, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Array{Int64, 2}, Base.UnitRange{Int64}, Base.Colon})
    precompile(Tuple{typeof(Base.bessely1), Float64})
    precompile(Tuple{typeof(Base.throw_boundserror), DataArrays.DataArray{Float64, 1}, Tuple{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.open), String, String})
    precompile(Tuple{typeof(Base.unique), Array{Array{Int64, 1}, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Float64, 1}, 1}, Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Float64, 1}, Tuple{Base.LogicalIndex{Int64, Base.BitArray{1}}}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Float64, Array{AbstractFloat, 1}}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), DataArrays.DataArray{Any, 1}, Int64, Int})
    precompile(Tuple{typeof(Base.unique), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{Int64, 1}, Int64, Int})
    precompile(Tuple{typeof(Base.:(/)), Base.TwicePrecision{Float64}, Int64})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Int})
    precompile(Tuple{typeof(Base.LinAlg.linreg), Array{Float64, 1}, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.rat), Float64})
    precompile(Tuple{typeof(Base.getindex), Array{DataArrays.DataArray{Float64, 1}, 1}, Int64})
    precompile(Tuple{typeof(Base.println), Base.TTY, String, String})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Array{Any, 1}, Int64}, Tuple{Tuple{Bool}, Tuple{}}, Tuple{Tuple{Int64}, Tuple{}}, Base.IteratorsMD.CartesianIndex{1}}}})
    precompile(Tuple{typeof(Base.convert), Type{Array{T, 2} where T}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Int64, Array{Int64, 1}}, Int64})
    precompile(Tuple{typeof(Base.isempty), Array{JuMP.GenericQuadConstraint{JuMP.GenericQuadExpr{Float64, JuMP.Variable}}, 1}})
    precompile(Tuple{typeof(Base.copy_exprs), Expr})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Float64, Base.Colon, Int64})
    precompile(Tuple{typeof(Base.throw_boundserror), Array{Real, 1}, Tuple{Array{Int64, 1}}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Float64, Array{Float64, 1}, Int})
    precompile(Tuple{typeof(Base.length), Array{JuMP.GenericSOCConstraint{JuMP.GenericNormExpr{2, Float64, JuMP.Variable}}, 1}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1846#1862"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.copy!), Base.IndexLinear, Array{Array{Float64, 2}, 1}, Base.IndexLinear, Array{Array{Int64, 2}, 1}})
    precompile(Tuple{typeof(Base.polygamma), Int64, Float64})
    precompile(Tuple{typeof(Base.identity), Float64})
    precompile(Tuple{typeof(Base.isempty), Array{JuMP.SOSConstraint, 1}})
    precompile(Tuple{typeof(Base.Broadcast.broadcast_shape), Tuple{}, Tuple{}, Tuple{Base.OneTo{Int64}}, Tuple})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}})
    precompile(Tuple{typeof(Base.isempty), Array{JuMP.GenericSOCConstraint{JuMP.GenericNormExpr{2, Float64, JuMP.Variable}}, 1}})
    precompile(Tuple{typeof(Base.copy!), Array{Float64, 2}, Int64, Array{Float64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.length), Array{QpcrAnalysis.TargetResultEle, 1}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Int64, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.broadcast!), typeof(identity), DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.sort!), Array{AbstractFloat, 1}, Int64, Int64, Base.Sort.PartialQuickSort{Base.UnitRange{Int64}}, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.uv_writecb_task), Ptr{Void}, Int32})
    precompile(Tuple{typeof(Base.LinAlg.transpose_f!), typeof(Base.transpose), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.maximum), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataArrays.DataArray{Float64, 3}, DataArrays.DataArray{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.LinAlg.linreg), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.copy!), Array{UInt8, 1}, Base.KeyIterator{DataStructures.OrderedDict{UInt8, Any}}})
    precompile(Tuple{typeof(Base.broadcast!), typeof(identity), DataArrays.DataArray{Any, 1}, Float64, DataArrays.DataArray{Any, 1}, Int64, Int})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##5#6")){Expr}}})
    precompile(Tuple{typeof(Base.:(+)), Int64, Int64, Int64, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Any}, String, String})
    precompile(Tuple{typeof(Base.getindex), Array{ReverseDiffSparse.Linearity, 1}, Int64})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Float64, Base.IteratorsMD.CartesianIndex{0}})
    precompile(Tuple{typeof(Base.Broadcast.check_broadcast_shape), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.Broadcast.maptoTuple), typeof(Base.Broadcast._broadcast_getindex_eltype), Array{Float64, 1}, Int64, Int})
    precompile(Tuple{typeof(Base.Sort.select!), Array{AbstractFloat, 1}, Int64, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base._collect), Array{Symbol, 1}, Base.Generator{Array{Symbol, 1}, getfield(QpcrAnalysis, Symbol("##1604#1614")){Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Symbol, Void}, Symbol})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{Float64, 1}, Void}, Void, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.unique), Array{Array{Symbol, 1}, 1}})
    precompile(Tuple{typeof(Base.reinterpret), Type{Int64}, Ptr{Void}})
    precompile(Tuple{typeof(Base.convert), Type{QpcrAnalysis.ClusterAnalysisResult}, QpcrAnalysis.ClusterAnalysisResult})
    precompile(Tuple{typeof(Base.argtail), Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Int})
    precompile(Tuple{typeof(Base.convert), Type{DataStructures.OrderedDict{String, Array{String, 1}}}, DataStructures.OrderedDict{String, Array{String, 1}}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast_getindex), Int64, Base.IteratorsMD.CartesianIndex{0}})
    precompile(Tuple{typeof(Base.cat_size), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Int64, 2}, Int64, Int64})
    precompile(Tuple{typeof(Base.getindex), Base.Dict{Int64, Symbol}, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Symbol, Int64}, Symbol})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Float64, String})
    precompile(Tuple{typeof(Base._setindex!), Base.IndexLinear, Array{Float64, 2}, Float64, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.done), Float64, Bool})
    precompile(Tuple{typeof(Base.StackTraces.stacktrace), Array{Ptr{Void}, 1}, Bool})
    precompile(Tuple{typeof(Base.identity), Array{Any, 1}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmin), Base.IndexLinear, Array{Any, 1}})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Tuple{Base.Pair{Symbol, QpcrAnalysis.TargetResultEle}}, getfield(DataFrames, Symbol("##36#38"))}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{String, Int64}, String})
    precompile(Tuple{typeof(Base.maximum), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.promote_eltype), Array{Int64, 2}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Tuple{Float64, Bool}, String})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(Base, Symbol("##61#62")){Float32, Tuple{Array{Float32, 1}, Array{Float32, 1}}}}})
    precompile(Tuple{typeof(Base.copy!), Array{AbstractFloat, 1}, Int64, Array{AbstractFloat, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.done), Array{JuMP.GenericQuadConstraint{JuMP.GenericQuadExpr{Float64, JuMP.Variable}}, 1}, Int64})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Symbol, Char}, Symbol})
    precompile(Tuple{typeof(Base.reducedim_initarray0), Array{Float64, 2}, Int64, Float64, Type{Float64}})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Tuple{Base.Pair{Symbol, Int64}}, getfield(DataFrames, Symbol("##36#38"))}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1601#1611")){Int64, String, String, Base.Dict{Symbol, Any}, String, Bool, Array{AbstractFloat, 3}}}})
    precompile(Tuple{typeof(Base.copy!), DataArrays.DataArray{Any, 2}, Int64, DataArrays.DataArray{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base._collect), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(QpcrAnalysis, Symbol("##1519#1520")){Float64, Float64, Float64, Float64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.Iterators.Prod2{Base.UnitRange{Int64}, Base.UnitRange{Int64}}, getfield(QpcrAnalysis, Symbol("##1625#1628")){Int64, Array{Float64, 2}}}})
    precompile(Tuple{typeof(Base.:(==)), ReverseDiffSparse.Linearity, ReverseDiffSparse.Linearity})
    precompile(Tuple{typeof(Base.reduced_indices0), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.getindex), DataStructures.OrderedDict{String, Function}, String})
    precompile(Tuple{typeof(Base._setindex!), Base.IndexLinear, Array{Float64, 3}, Array{Float64, 1}, Int64, Int64, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.length), Array{JuMP.GenericRangeConstraint{JuMP.NonlinearExprData}, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Base.Set{Array{AbstractFloat, 1}}, QpcrAnalysis.UniqCombinCenters}, QpcrAnalysis.UniqCombinCenters, Base.Set{Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.copy!), Array{Any, 1}, Base.Generator{Tuple{Base.Pair{Symbol, QpcrAnalysis.GroupResultEle}}, getfield(DataFrames, Symbol("##36#38"))}})
    precompile(Tuple{typeof(Base.start), Base.KeyIterator{DataStructures.OrderedDict{Any, Any}}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Union{Tuple{Integer, Integer}, Char, Integer}}, Bool, Symbol})
    precompile(Tuple{typeof(Base.sizeof), ErrorException})
    precompile(Tuple{typeof(Base.length), Array{JuMP.SOSConstraint, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 1}, Float64, Base.IteratorsMD.CartesianIndex{1}})
    precompile(Tuple{typeof(Base.getindex), DataStructures.OrderedDict{String, Array{Int64, 2}}, String})
    precompile(Tuple{typeof(Base.length), Array{Real, 1}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmax), Base.IndexLinear, Array{Any, 1}})
    precompile(Tuple{typeof(Base.LinAlg.gemm_wrapper!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.promote_eltype), Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Any, Any}, Bool, String})
    precompile(Tuple{getfield(Base, Symbol("##show_trace_entry#493")), String, typeof(identity), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame, Int64})
    precompile(Tuple{typeof(Base.typed_hcat), Type{Any}, DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}, DataArrays.DataArray{Any, 1}})
    precompile(Tuple{typeof(Base.transpose), Int64})
    precompile(Tuple{typeof(Base.getindex), DataStructures.OrderedDict{String, Float64}, String})
    precompile(Tuple{typeof(Base._collect), Type{Any}, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##46#47")){Array{Int64, 1}}}, Base.HasShape})
    precompile(Tuple{typeof(Base.filter), getfield(ReverseDiffSparse, Symbol("##10#13")){Int64, Base.BitArray{1}}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.sort!), Array{UInt8, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1741#1750")){Array{Any, 1}, Int64, DataStructures.OrderedDict{String, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.setindex_shape_check), DataArrays.DataArray{Any, 1}, Int64, Int64})
    precompile(Tuple{typeof(Base.Cartesian._nref), Int64, Symbol, Expr})
    precompile(Tuple{typeof(Base.print), Base.TTY, FactCheck.Failure})
    precompile(Tuple{typeof(Base.length), Array{JuMP.SDConstraint, 1}})
    precompile(Tuple{typeof(Base.union!), Base.Set{Symbol}, Array{Symbol, 1}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1378#1379")){Array{Int64, 1}, DataArrays.DataArray{Any, 3}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.fill), Array{Int64, 2}, Int64})
    precompile(Tuple{getfield(Base, Symbol("##print_to_string#229")), Void, typeof(identity), Expr, Expr})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.Colon, Base.Colon})
    precompile(Tuple{typeof(Base.fill), QpcrAnalysis.TargetResultEle, Int64})
    precompile(Tuple{typeof(Base.convert), Type{JuMP.NLPData}, JuMP.NLPData})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1633#1652")){Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.length), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.:(==)), ReverseDiffSparse.NodeType, ReverseDiffSparse.NodeType})
    precompile(Tuple{typeof(Base.LinAlg.vecnorm2), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.mean!), Array{Float64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.r_promote), typeof(identity), Array{Any, 1}})
    precompile(Tuple{typeof(Base.sleep), Float64})
    precompile(Tuple{typeof(Base.LinAlg.scale!), Array{Float64, 3}, Float64})
    precompile(Tuple{typeof(Base.any), getfield(Base, Symbol("##136#137")){Array{Int64, 1}}, Array{Array{Int64, 1}, 1}})
    precompile(Tuple{typeof(Base.fill!), Array{Float64, 3}, Float64})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Bool, String})
    precompile(Tuple{typeof(Base._cat), DataArrays.DataArray{Float64, 3}, Tuple{Int64, Int64, Int64}, Tuple{Bool, Bool, Bool}, DataArrays.DataArray{Float64, 2}, DataArrays.DataArray{Float64, 2}})
    precompile(Tuple{typeof(Base._collect), Type{Any}, Base.Generator{Array{Any, 1}, getfield(DataFrames, Symbol("##44#45")){Array{Int64, 1}}}, Base.HasShape})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Real, 1}, Array{Int64, 1}})
    precompile(Tuple{getfield(Base.Sort, Symbol("##sort!#7")), Base.Sort.QuickSortAlg, typeof(identity), typeof(identity), Bool, Base.Order.ForwardOrdering, typeof(identity), Array{UInt8, 1}})
    precompile(Tuple{typeof(Base.:(*)), Float64, DataArrays.DataArray{Any, 3}})
    precompile(Tuple{typeof(Base._collect), Array{Union{Float64, Missings.Missing}, 1}, Base.Generator{Array{Union{Float64, Missings.Missing}, 1}, Type{Float32}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.repr), Base.KeyError})
    precompile(Tuple{typeof(Base.Cartesian.lreplace!), Symbol, Base.Cartesian.LReplace{String}})
    precompile(Tuple{typeof(Base.argtail), Array{AbstractFloat, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.fill), QpcrAnalysis.GroupResultEle, Int64})
    precompile(Tuple{typeof(Base.hcat), Int64, Float64})
    precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Array{AbstractFloat, 1}, Void}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.open), getfield(JSON.Parser, Symbol("##4#5")){typeof(Type), DataType, Bool, Int64}, String})
    precompile(Tuple{typeof(Base.LinAlg.vecnorm2), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.argtail), Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.BitArray{1}, Base.BitArray{1}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.fill), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.LinAlg.norm), Array{Float64, 2}, Int64})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Array{Any, 1}}, Array{Any, 1}, String})
    precompile(Tuple{typeof(Base.range), Float64, Float64, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##102#109")){Tuple{DataType, DataType}}}})
    precompile(Tuple{typeof(Base._cat), DataArrays.DataArray{Any, 3}, Tuple{Int64, Int64, Int64}, Tuple{Bool, Bool, Bool}, DataArrays.DataArray{Any, 2}, DataArrays.DataArray{Any, 2}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, DataArrays.DataArray{Float64, 3}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base._collect), Type{AbstractFloat}, Base.Generator{DataArrays.DataArray{Any, 3}, getfield(DataArrays, Symbol("##1#2"))}, Base.HasShape})
    precompile(Tuple{typeof(Base.print), Base.AbstractIOBuffer{Array{UInt8, 1}}, Expr})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{QpcrAnalysis.TargetResultEle, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base.LinAlg.scale!), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.LinAlg.dot), Array{Float64, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.lufact), Array{Float32, 2}, Type{Base.Val{true}}})
    precompile(Tuple{typeof(Base.collect), Tuple{DataType, DataType, DataType}})
    precompile(Tuple{getfield(Base, Symbol("##showarray#263")), Bool, typeof(identity), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{String, 1}, Bool})
    precompile(Tuple{typeof(Base.copy!), DataArrays.DataArray{Float64, 1}, DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, DataStructures.OrderedDict{String, Any}, String})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Expr, 1}, Expr, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType}, Int64}}, Int64})
    precompile(Tuple{getfield(Base.DataFmt, Symbol("##readdlm_auto#11")), Array{Any, 1}, typeof(identity), String, Char, Type{Int}, Char, Bool})
    precompile(Tuple{typeof(Base.minimum), Array{Any, 1}})
    precompile(Tuple{typeof(Base.setindex!), Array{AbstractFloat, 1}, Array{AbstractFloat, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.setindex!), DataArrays.DataArray{Any, 3}, DataArrays.DataArray{Any, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.Cartesian._nexprs), Int64, Expr})
    precompile(Tuple{typeof(Base.LinAlg.syrk_wrapper!), Array{Float64, 2}, Char, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.LinAlg.scale!), Array{Float64, 2}, Float64})
    precompile(Tuple{typeof(Base.maximum), Array{Any, 1}})
    precompile(Tuple{typeof(Base.collect), Base.ValueIterator{DataStructures.OrderedDict{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}}})
    precompile(Tuple{typeof(Base.typed_vcat), Type{Int64}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(Combinatorics, Symbol("##7#8")){Combinatorics.Combinations{Array{Int64, 1}}}}})
    precompile(Tuple{typeof(Base._cat), Array{Int64, 3}, Tuple{Int64, Int64, Int64}, Tuple{Bool, Bool, Bool}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base._collect), Array{AbstractString, 1}, Base.Generator{Array{AbstractString, 1}, Type{Symbol}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Clustering, Symbol("##5#6"))}})
    precompile(Tuple{typeof(Base.getindex), Array{Any, 1}, Array{Bool, 1}})
    precompile(Tuple{typeof(Base.LinAlg.vecnorm1), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.hash), Base.Set{Array{AbstractFloat, 1}}, UInt64})
    precompile(Tuple{typeof(Base.uv_write), Base.TTY, Ptr{UInt8}, UInt64})
    precompile(Tuple{typeof(Base.LinAlg.copy_transpose!), Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Char, Array{Float64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base._collect), Type{Any}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}, Base.HasShape})
    precompile(Tuple{typeof(Base._collect), Array{QpcrAnalysis.MeltCurveTF, 1}, Base.Generator{Array{QpcrAnalysis.MeltCurveTF, 1}, getfield(QpcrAnalysis, Symbol("##1742#1751"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.covm), Array{Float64, 1}, Float64, Array{Float64, 1}, Float64, Bool})
    precompile(Tuple{typeof(Base.setindex!), DataArrays.DataArray{Any, 2}, DataArrays.DataArray{Any, 1}, Base.Colon, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.convert), Type{DataStructures.OrderedDict{Base.Set{Array{Float64, 1}}, QpcrAnalysis.UniqCombinCenters}}, DataStructures.OrderedDict{Base.Set{Array{AbstractFloat, 1}}, QpcrAnalysis.UniqCombinCenters}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Tuple{Int64, Int64}, Void}, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base.unsafe_write), Base.TTY, Ptr{UInt8}, UInt64})
    precompile(Tuple{typeof(Base.Cartesian._ncall), Int64, Symbol, Symbol, Symbol})
    precompile(Tuple{typeof(Base.Cartesian._nexprs), Int64, Expr})
    precompile(Tuple{typeof(Base._collect), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Base.Generator{Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, getfield(QpcrAnalysis, Symbol("##1523#1524")){Float64, Float64, Float64, Float64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.Cartesian._nexprs), Int64, Expr})
    precompile(Tuple{typeof(Base.copy), Expr})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Int64}, Int64, String})
    precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
    precompile(Tuple{typeof(Base.depwarn), String, Symbol})
    precompile(Tuple{typeof(Base.vcat), Array{Any, 1}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Base.UnitRange{Int64}, getfield(Base.Broadcast, Symbol("##1#2")){Tuple{Int64, Array{AbstractFloat, 1}}, Tuple{Tuple{}, Tuple{Bool}}, Tuple{Tuple{}, Tuple{Int64}}, Base.IteratorsMD.CartesianIndex{1}}}, Int64})
    precompile(Tuple{typeof(Base._collect), Type{Any}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}, Base.HasShape})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1763#1771")){Array{Symbol, 1}, Array{DataStructures.OrderedDict{Any, Any}, 1}, Array{Int64, 1}, Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.median), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base._collect), Array{JuMP.Variable, 1}, Base.Generator{Array{JuMP.Variable, 1}, typeof(JuMP.getvalue)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##105#112")){Tuple{DataType, DataType}, Int64}}})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Expr, 1}, Expr, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType}, Int64}}, Int64})
    precompile(Tuple{typeof(Base.repr), ErrorException})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ReverseDiffSparse, Symbol("##9#12"))}})
    precompile(Tuple{typeof(Base.copy), Expr})
    precompile(Tuple{typeof(Base.getindex), Array{Int64, 2}, Base.Colon, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.Colon, Base.BitArray{1}})
    precompile(Tuple{typeof(Base.vcat), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{DataStructures.OrderedDict{String, Any}, 1}, DataStructures.OrderedDict{String, Any}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1744#1753")){Int64}}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Array{Float64, 2}, 1}, Array{Float32, 2}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Array{Float64, 2}, Array{Float64, 2}, Base.UnitRange{Int64}, Base.Colon})
    precompile(Tuple{typeof(Base._collect), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1527#1528")){Float64, Float64, Float64, Float64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.StackTraces.show_spec_linfo), Base.IOContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Base.StackTraces.StackFrame})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##13#14"))}})
    precompile(Tuple{typeof(Base.inv), Base.LinAlg.LU{Float32, Array{Float32, 2}}})
    precompile(Tuple{typeof(Base.setindex_shape_check), DataArrays.DataArray{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.typed_hcat), Type{Int64}, Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1378#1379")){Array{String, 1}, Array{Float64, 3}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 2}, Base.Colon, Array{Bool, 1}})
    precompile(Tuple{typeof(Base.LinAlg.generic_matmatmul!), Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 2}, Base.OneTo{Int64}, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{Int64, 2}, Base.Colon, Base.Colon})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 3}, Base.UnitRange{Int64}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Array{Int64, 1}, Void}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.max), Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.LinAlg.norm2), Array{Float64, 2}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 3}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##102#109")){Tuple{DataType, DataType, DataType, DataType}}}})
    precompile(Tuple{typeof(Base._collect), Array{Array{QpcrAnalysis.TargetResultEle, 1}, 1}, Base.Generator{Array{Array{QpcrAnalysis.TargetResultEle, 1}, 1}, typeof(Base.length)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Array{Float64, 1}, Void}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.Broadcast._broadcast!), getfield(QpcrAnalysis, Symbol("##21#30")), Array{Float64, 1}, Tuple{Tuple{Bool}, Tuple{Bool}}, Tuple{Tuple{Int64}, Tuple{Int64}}, Array{Float64, 1}, Tuple{Array{Float64, 1}}, Type{Base.Val{1}}, Base.IteratorsMD.CartesianRange{Base.IteratorsMD.CartesianIndex{1}}})
    precompile(Tuple{typeof(Base.Sort.select!), Array{AbstractFloat, 1}, Base.UnitRange{Int64}, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base._cat), Array{Float64, 3}, Tuple{Int64, Int64, Int64}, Tuple{Bool, Bool, Bool}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1382#1389"))}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.GroupedDataFrame, getfield(DataFrames, Symbol("##62#63")){getfield(QpcrAnalysis, Symbol("##1678#1690")){Int64, QpcrAnalysis.GroupResultEle}}}})
    precompile(Tuple{typeof(Base.convert), Type{DataStructures.OrderedDict{String, DataStructures.OrderedDict{Int64, Array{Float64, 1}}}}, DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}})
    precompile(Tuple{typeof(Base.getindex), Base.UnitRange{Int64}, Array{Bool, 1}})
    precompile(Tuple{typeof(Base._collect), Array{DataStructures.OrderedDict{String, Any}, 1}, Base.Generator{Array{DataStructures.OrderedDict{String, Any}, 1}, getfield(QpcrAnalysis, Symbol("##1747#1756")){Bool, Float64, Float64, Bool, DataStructures.OrderedDict{Symbol, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1650#1669")){Array{String, 1}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.print), Base.TTY, String, Char, Char})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Void, 1}, Void, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##101#108")){Tuple{DataType, DataType, DataType, DataType}, Int64}}, Int64})
    precompile(Tuple{typeof(Base.filter!), getfield(DataFrames, Symbol("##22#27")), Array{Array{Symbol, 1}, 1}})
    precompile(Tuple{typeof(Base.similar), DataArrays.DataArray{Float64, 2}, Type{Int}, Tuple{Int64, Int64, Int64}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##17#18")){Expr}}})
    precompile(Tuple{typeof(Base.sort!), Array{UInt8, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, DataArrays.DataArray{Any, 1}})
    precompile(Tuple{typeof(Base.transpose), Base.BitArray{2}})
    precompile(Tuple{typeof(Base.hcat), Array{Int64, 2}, Array{Int64, 2}})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Int64, 2}, 1}, Array{Int64, 2}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1632#1651")){Int64}}, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##3#4"))}})
    precompile(Tuple{typeof(Base.getindex), Array{Int64, 3}, Base.Colon, Base.Colon, Int64})
    precompile(Tuple{typeof(Base._collect), Array{QpcrAnalysis.GroupResultEle, 1}, Base.Generator{Array{QpcrAnalysis.GroupResultEle, 1}, getfield(QpcrAnalysis, Symbol("##1683#1695"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.setindex_shape_check), Base.StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}, Int64})
    precompile(Tuple{typeof(Base.getindex), DataArrays.DataArray{Any, 3}, Base.Colon, Base.Colon, Int64})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 3}, Base.UnitRange{Int64}, Base.Colon, Base.Colon})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(Base, Symbol("##65#66")){Base.Dict{Int64, Int64}}}})
    precompile(Tuple{typeof(Base._collect), Array{Array{DataStructures.OrderedDict{String, Any}, 1}, 1}, Base.Generator{Array{Array{DataStructures.OrderedDict{String, Any}, 1}, 1}, getfield(QpcrAnalysis, Symbol("##1746#1755")){Bool, Float64, Float64, Bool, DataStructures.OrderedDict{Symbol, Any}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Void, 1}, Void, Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##104#111")){Tuple{DataType, DataType, DataType, DataType}, Int64}}, Int64})
    precompile(Tuple{typeof(Base._collect), Array{Array{QpcrAnalysis.GroupResultEle, 1}, 1}, Base.Generator{Array{Array{QpcrAnalysis.GroupResultEle, 1}, 1}, typeof(Base.length)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.:(+)), DataArrays.DataArray{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Array{AbstractFloat, 1}, Void}, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.lcm), Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, DataArrays.DataArray{Any, 3}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##21#22"))}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(DataArrays, Symbol("##103#110"))}})
    precompile(Tuple{typeof(Base.besselj), Int64, Float64})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, String, String})
    precompile(Tuple{typeof(Base.convert), Type{DataArrays.DataArray{Float64, 1}}, Array{Any, 1}})
    precompile(Tuple{typeof(Base._collect), Array{DataFrames.DataFrame, 1}, Base.Generator{Array{DataFrames.DataFrame, 1}, typeof(Base.names)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, DataArrays.DataArray{Float64, 1}, String})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Array{DataStructures.OrderedDict{String, Any}, 1}, String})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmin), Base.IndexLinear, Array{Int64, 1}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Int64, 2}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1635#1654")){Array{Float64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect), Base.Generator{DataFrames.GroupedDataFrame, getfield(DataFrames, Symbol("##62#63")){getfield(QpcrAnalysis, Symbol("##1674#1686")){Int64, Int64, QpcrAnalysis.TargetResultEle}}}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(Base, Symbol("##26#27")){Tuple{DataType, DataType, DataType}}}})
    precompile(Tuple{typeof(Base.getindex), Base.UnitRange{Int64}, Base.BitArray{1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(DataArrays, Symbol("##105#112")){Tuple{DataType, DataType, DataType, DataType}, Int64}}})
    precompile(Tuple{typeof(Base.typed_hcat), Type{Float64}, Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.getindex), DataArrays.DataArray{Float64, 1}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base._collect), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, getfield(QpcrAnalysis, Symbol("##1525#1526")){Float64, Float64, Float64, Float64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.getindex), Tuple{Symbol, Expr}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base._collect), Array{Array{Int64, 1}, 1}, Base.Generator{Array{Array{Int64, 1}, 1}, typeof(Base.length)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 3}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.hcat), Base.IndexLinear, Array{Any, 1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##23#24"))}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, DataArrays.DataArray{Any, 2}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##17#18"))}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(JuMP, Symbol("##62#65"))}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ForwardDiff, Symbol("##5#6"))}})
    precompile(Tuple{typeof(Base.hcat), Array{Int64, 2}})
    precompile(Tuple{typeof(Base.transpose), DataArrays.DataArray{Any, 2}})
    precompile(Tuple{typeof(Base.write), JSON.Writer.CompactContext{Base.AbstractIOBuffer{Array{UInt8, 1}}}, Array{UInt8, 1}})
    precompile(Tuple{typeof(Base._mapreduce), getfield(Base, Symbol("##531#532")){Float64}, typeof(Base.:(+)), Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.start), Base.ValueIterator{DataStructures.OrderedDict{Base.Set{Array{AbstractFloat, 1}}, QpcrAnalysis.UniqCombinCenters}}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(Base.Cartesian, Symbol("##3#4")){Symbol}}})
    precompile(Tuple{typeof(Base.reducedim_initarray), Array{Float64, 3}, Int64, Int64, Type{Float64}})
    precompile(Tuple{typeof(Base.hash), Tuple{Int32, Int32, UInt64}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, DataArrays.DataArray{Float64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmin), Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.ht_keyindex2), Base.Dict{Array{Symbol, 1}, Void}, Array{Symbol, 1}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1646#1665")){Array{Int64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Tuple{Int64, Int64}, Void}, Void, Tuple{Int64, Int64}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmin), Base.IndexLinear, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.minimum), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.copy_exprargs), Array{Any, 1}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1635#1654")){Array{Int64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1405#1410"))}})
    precompile(Tuple{typeof(Base.getindex), Array{Any, 2}, Base.OneTo{Int64}, Int64})
    precompile(Tuple{getfield(Base, Symbol("##varm#533")), Bool, typeof(identity), Array{Float64, 1}, Float64})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(DataArrays, Symbol("##106#113"))}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.:(+)), Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 2}, Base.Colon})
    precompile(Tuple{typeof(Base.:(*)), Float64, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.copy!), Array{QpcrAnalysis.GroupResultEle, 1}, Int64, Array{QpcrAnalysis.GroupResultEle, 1}})
    precompile(Tuple{typeof(Base._collect), Array{Function, 1}, Base.Generator{Array{Function, 1}, getfield(QpcrAnalysis, Symbol("##1781#1797"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base._collect), Array{Int64, 1}, Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1647#1666")){Array{Int64, 2}}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.hcat), Array{Any, 1}, Array{Any, 1}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.:(+)), Base.IndexLinear, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 2}, Int64, Base.Generator{Array{Float64, 2}, getfield(QpcrAnalysis, Symbol("##1621#1623"))}, Int64})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.min), Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.copy_exprargs), Array{Any, 1}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Int64, 1}, getfield(QpcrAnalysis, Symbol("##1577#1579"))}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Tuple{Symbol, Symbol}, 1}, getfield(JuMP, Symbol("##114#115"))}})
    precompile(Tuple{typeof(Base.write), Base.TTY, UInt8})
    precompile(Tuple{typeof(Base.getindex), Array{QpcrAnalysis.TargetResultEle, 1}, Base.BitArray{1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Array{DataStructures.OrderedDict{K, V} where V where K, 1}, String})
    precompile(Tuple{typeof(Base.issubset), Base.Set{Array{Float64, 1}}, Base.Set{Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(ReverseDiffSparse, Symbol("##11#14"))}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Array{Symbol, 1}, getfield(DataFrames, Symbol("##8#9")){DataFrames.Index}}})
    precompile(Tuple{typeof(Base.hash), Tuple{Int32, Void, UInt64}})
    precompile(Tuple{typeof(Base.getindex), DataArrays.DataArray{Any, 3}, Int64})
    precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
    precompile(Tuple{typeof(Base._collect), Array{QpcrAnalysis.UniqCombinCenters, 1}, Base.Generator{Array{QpcrAnalysis.UniqCombinCenters, 1}, getfield(QpcrAnalysis, Symbol("##1641#1660"))}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.getindex), Array{Int64, 2}, Int64, Base.Colon})
    precompile(Tuple{typeof(Base.getindex), Tuple{Symbol, Symbol}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Symbol, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.reducedim_initarray), Array{Float64, 2}, Int64, Int64, Type{Float64}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Array{Float64, 1}, String})
    precompile(Tuple{typeof(Base.inv), Array{Float32, 2}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Symbol, Any}, Int64, Symbol})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Void}, Void, Tuple{Base.StackTraces.StackFrame, String, Int64}})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmax), Base.IndexLinear, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base._collect), Array{Float64, 1}, Base.Generator{Array{Float64, 1}, Type{Float32}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Float64, 1}, Base.LogicalIndex{Int64, Base.BitArray{1}}})
    precompile(Tuple{typeof(Base._collect), Array{Float64, 2}, Base.Generator{Array{Float64, 2}, getfield(QpcrAnalysis, Symbol("##1622#1624")){Int64}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{AbstractFloat, 1}, Void}, Void, Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Int64, Array{DataStructures.OrderedDict{String, Any}, 1}}, Array{DataStructures.OrderedDict{String, Any}, 1}, Int64})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Any, Any}, Array{Any, 1}, Symbol})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{AbstractFloat, 3}, Base.Slice{Base.OneTo{Int64}}, Int64, Int64})
    precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{Any, 3}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Int64})
    precompile(Tuple{typeof(Base.getindex), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1406#1411"))}})
    precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
    precompile(Tuple{typeof(Base._getindex), Base.IndexLinear, Array{Int64, 1}, Base.LogicalIndex{Int64, Array{Bool, 1}}})
    precompile(Tuple{typeof(Base.transpose), Array{Int64, 2}})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{AbstractFloat, 1}, Int64})
    precompile(Tuple{typeof(Base.log), Int64, Float64})
    precompile(Tuple{typeof(Base.getindex), DataArrays.DataArray{Float64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base._collect), Array{Array{Tuple{Int64, Int64}, 1}, 1}, Base.Generator{Array{Array{Tuple{Int64, Int64}, 1}, 1}, typeof(Base.length)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base._collect), Array{FactCheck.Error, 1}, Base.Generator{Array{FactCheck.Error, 1}, typeof(Base.println)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{getfield(Base.Sort, Symbol("##sort#8")), Array{Any, 1}, typeof(identity), Array{Int64, 1}})
    precompile(Tuple{typeof(Base._collect), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, getfield(QpcrAnalysis, Symbol("##1670#1671")){QpcrAnalysis.AmpStepRampOutput}}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.sum), Array{Int64, 2}, Int64})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Array{Any, 1}, String})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Base.Set{Array{Float64, 1}}, QpcrAnalysis.UniqCombinCenters}, QpcrAnalysis.UniqCombinCenters, Base.Set{Array{Float64, 1}}})
    precompile(Tuple{getfield(Base.Sort, Symbol("##sort#8")), Array{Any, 1}, typeof(identity), DataArrays.DataArray{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, DataStructures.OrderedDict{Int64, Array{Float64, 1}}}, DataStructures.OrderedDict{Int64, Array{Float64, 1}}, String})
    precompile(Tuple{typeof(Base.convert), Type{DataArrays.DataArray{Float64, 2}}, Array{Real, 2}})
    precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{QpcrAnalysis.GroupResultEle, 1}, Symbol})
    precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.scalarmax), Base.IndexLinear, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Int64, DataArrays.DataArray{Any, 2}}, DataArrays.DataArray{Any, 2}, Int64})
    precompile(Tuple{getfield(Base.Sort, Symbol("##sort#8")), Array{Any, 1}, typeof(identity), Array{UInt8, 1}})
    precompile(Tuple{typeof(Base.getindex), Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.union!), Base.Set{Array{Float64, 1}}, Base.Set{Array{AbstractFloat, 1}}})
    precompile(Tuple{typeof(Base.print), Base.TTY, String})
    precompile(Tuple{typeof(Base.LinAlg.BLAS.gemv!), Array{Float64, 1}, Char, Array{Float64, 2}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Int64, Int64}, Int64, Int64})
    precompile(Tuple{typeof(Base.issubset), Base.Set{Array{Float64, 1}}, Base.Set{Array{AbstractFloat, 1}}})
    precompile(Tuple{typeof(Base.mean!), Array{Float64, 3}, Array{Float64, 3}})
    precompile(Tuple{typeof(Base.hcat), Array{Float32, 1}, Array{Float32, 1}})
    precompile(Tuple{typeof(Base.copy!), Array{QpcrAnalysis.TargetResultEle, 1}, Int64, Array{QpcrAnalysis.TargetResultEle, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{Int64, 1}, Symbol})
    precompile(Tuple{typeof(Base.LinAlg.svdvals!), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.getindex), Tuple{DataType, DataType, DataType}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Symbol, Any}, Float64, Symbol})
    precompile(Tuple{typeof(Base._collect), Array{FactCheck.Failure, 1}, Base.Generator{Array{FactCheck.Failure, 1}, typeof(Base.println)}, Base.EltypeUnknown, Base.HasShape})
    precompile(Tuple{typeof(Base.getindex), Array{AbstractFloat, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.minimum), Array{Int64, 1}})
    precompile(Tuple{typeof(Base.cat_size), DataArrays.DataArray{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.countnz), Tuple{Bool}})
    precompile(Tuple{typeof(Base.getindex), Array{Float64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.issubset), Base.Set{Array{AbstractFloat, 1}}, Base.Set{Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Int64, Array{Int64, 1}}, Array{Int64, 1}, Int64})
    precompile(Tuple{typeof(Base.union!), Base.Set{Int64}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.getindex), Array{Any, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Array{String, 1}}, Array{String, 1}, String})
    precompile(Tuple{typeof(Base.union!), Base.Set{Array{AbstractFloat, 1}}, Base.Set{Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.start), Base.KeyIterator{DataStructures.OrderedDict{Array{Int64, 1}, Array{Int64, 1}}}})
    precompile(Tuple{typeof(Base.getindex), Array{Real, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Float64, Void}, Void, Float64})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{Int64, 1}, Void}, Void, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.union!), Base.Set{Array{Float64, 1}}, Array{Array{Float64, 1}, 1}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, Array{Any, 1}, Symbol})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Array{Int64, 2}}, Array{Int64, 2}, String})
    precompile(Tuple{typeof(Base.setindex_shape_check), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, Int64, Symbol})
    precompile(Tuple{typeof(Base.LinAlg.LAPACK.trtrs!), Char, Char, Char, Array{Float32, 2}, Array{Float32, 2}})
    precompile(Tuple{getfield(Base.DataFmt, Symbol("#kw##readdlm")), Array{Any, 1}, typeof(Base.DataFmt.readdlm), String, Char})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{Float64, 1}, Void}, Void, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.start), Base.KeyIterator{DataStructures.OrderedDict{UInt8, Any}}})
    precompile(Tuple{typeof(Base.setindex!), DataFrames.DataFrame, Array{QpcrAnalysis.TargetResultEle, 1}, Symbol})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Array{Bool, 2}}, Array{Bool, 2}, String})
    precompile(Tuple{typeof(Base.LinAlg.vecnorm), Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Void}, Void, Symbol})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Any}, Int64, String})
    precompile(Tuple{typeof(Base.transpose), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, DataStructures.OrderedDict{UInt8, Any}}, DataStructures.OrderedDict{UInt8, Any}, String})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, Void, Symbol})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Int64}, Int64, Symbol})
    precompile(Tuple{typeof(Base.mean!), Array{Float64, 2}, Array{Float64, 2}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Array{Float64, 2}}, Array{Float64, 2}, String})
    precompile(Tuple{typeof(Base.minimum), Array{AbstractFloat, 1}})
    precompile(Tuple{typeof(Base.sizehint!), Base.Dict{Array{Float64, 1}, Void}, Int64})
    precompile(Tuple{typeof(Base.indexin), Array{Int64, 1}, Array{Int64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{UInt8, Any}, Array{Any, 1}, Int64})
    precompile(Tuple{typeof(Base.isequal), Base.Set{Array{Float64, 1}}, Base.Set{Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.collect), Type{Any}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}})
    precompile(Tuple{typeof(Base.getindex), Tuple{Symbol}, Base.UnitRange{Int64}})
    precompile(Tuple{typeof(Base.isequal), Base.Set{Array{Float64, 1}}, Base.Set{Array{AbstractFloat, 1}}})
    precompile(Tuple{typeof(Base.collect), Type{Any}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}})
    precompile(Tuple{typeof(Base.unlock), Base.ReentrantLock})
    precompile(Tuple{typeof(Base.union!), Base.Set{Int64}, Tuple{Int64}})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{Symbol, 1}, Void}, Void, Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.in), Array{Int64, 1}, Array{Array{Int64, 1}, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Int64, Array{Float64, 1}}, Array{Float64, 1}, Int64})
    precompile(Tuple{typeof(Base.collect), ReverseDiffSparse.Coloring.IndexedSet})
    precompile(Tuple{typeof(Base.any), getfield(JuMP, Symbol("##112#113")), Array{Symbol, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Float64}, Float64, String})
    precompile(Tuple{typeof(Base.minimum), Array{Float64, 1}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{Symbol, Ipopt.IpoptSolver}, Ipopt.IpoptSolver, Symbol})
    precompile(Tuple{typeof(Base.mean), Array{Float64, 3}, Int64})
    precompile(Tuple{typeof(Base.sizehint!), Base.Dict{Int64, Void}, Int64})
    precompile(Tuple{typeof(Base.isequal), Base.Set{Array{AbstractFloat, 1}}, Base.Set{Array{Float64, 1}}})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, Void}, Void, String})
    precompile(Tuple{typeof(Base.setindex!), DataStructures.OrderedDict{String, QpcrAnalysis.AssignGenosResult}, QpcrAnalysis.AssignGenosResult, String})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, JuMP.Variable, Symbol})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Int64, Void}, Void, Int64})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Array{AbstractFloat, 1}, Void}, Void, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.:(*)), Array{Float64, 2}, Array{Float64, 1}})
    precompile(Tuple{typeof(Base.union!), DataStructures.IntDisjointSets, Int64, Int64})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Char}, Char, Symbol})
    precompile(Tuple{typeof(Base.setindex!), Base.Dict{Int64, Void}, Void, Int64})
    precompile(Tuple{typeof(Base.sort!), DataArrays.DataArray{Float64, 1}, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering})
    precompile(Tuple{typeof(Base.LinAlg.norm), Array{Float64, 2}})
    precompile(Tuple{typeof(Base.print), Base.TTY, Char})
end
