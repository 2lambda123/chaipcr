
this.draggedStage.wireStageNextAndPrevious();
var stageIndex = this.currentDrop.index;
var model = this.draggedStage.model
var stageView = new stageDude(model, C.canvas, C.allStepViews, 0, C, C.$scope, true);

if(this.currentDrop.nextStage) {
  stageView.nextStage = this.currentDrop.nextStage;
  this.currentDrop.nextStage = stageView;
  stageView.nextStage.previousStage = stageView;
} else {
  stageView.previousStage = this.currentDrop;
  this.currentDrop.nextStage = stageView;
}

C.allStageViews.splice(stageIndex + 1, 0, stageView);
C.allStageViews.splice(this.draggedStage.index, 1);



stageView.updateStageData(1);
stageView.render();
/********************Testing****************************/
var test = C.allStageViews[0];
//C.allStepViews = [];
while(test) {
  test.childSteps.forEach(function(step, index) {
    //C.allStepViews.push(step);
  });
  console.log(test.childSteps[0].model.temperature);
  test = test.nextStage;
}
console.log("/*****************************************************/");
  C.allStageViews.forEach(function(stage, index) {
    console.log(stage.childSteps[0].model.temperature);
  });
console.log("/*****************************************************/");
C.correctNumbering();
C.allStepViews.forEach(function(step, index) {
  console.log(step.model.temperature);
});

/********************Testing Ends****************************/
//C.correctNumbering();

//circleManager.init(C);
//circleManager.findAllCircles(C);
//          console.log(C.allStepViews);
//circleManager.addRampLinesAndCircles(circleManager.reDrawCircles());
//console.log(stageView.previousStage.childSteps);
/*//console.log(C.allStageViews);
C.allStageViews.splice(this.draggedStage.index, 1);
C.correctNumbering();
var ordealStatus = this.currentDrop.childSteps[this.currentDrop.childSteps.length - 1].ordealStatus;

var stageIndex = this.currentDrop.index;
var model = this.draggedStage.model
var stageView = new stageDude(model, C.canvas, C.allStepViews, stageIndex, C, C.$scope, true);
C.addNextandPrevious(this.currentDrop, stageView);
stageView.updateStageData(1);
C.allStageViews.splice(stageIndex, 0, stageView);
C.correctNumbering();
stageView.render();
//C.allStepViews.splice(this.draggedStage.childSteps[0].ordealStatus, this.draggedStage.childSteps.length);
//C.correctNumbering();
C.configureStepsofNewStage(stageView, ordealStatus);
C.correctNumbering();
circleManager.findAllCircles(C);
circleManager.addRampLinesAndCircles(circleManager.reDrawCircles());

//console.log(C.allStepViews);
//C.allStepViews.splice(this.draggedStage.childSteps[0].ordealStatus, this.draggedStage.childSteps.length);
console.log(C.allStageViews, stageView); */
